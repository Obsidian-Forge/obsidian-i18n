{
    "manifest": {
        "translationVersion": 1750586413780,
        "pluginVersion": "0.5.2"
    },
    "description": {
        "original": "Purpose of this plugin rename files based on pattern",
        "translation": "Purpose of this plugin rename files based on pattern"
    },
    "dict": {
        "Notice(\"please fill Existing Symbol\")": "Notice(\"请填写现有符号\")",
        "Notice(\"Please check your results before rename!\")": "Notice(\"重命名前请检查结果!\")",
        "Notice(\"renaming has been started\")": "Notice(\"重命名已开始\")",
        "Notice(\"FILES NOT RENAMED!\")": "Notice(\"文件未重命名!\")",
        "Notice(\n          \"WARNING: YOU MUST CREATE FOLDER BEFORE MOVING INTO IT\",\n          7e3\n        )": "Notice(\n          \"警告：您必须在修改该文件夹之前创建文件夹\",\n          7e3\n        )",
        "Notice(\"successfully renamed all files\")": "Notice(\"成功重命名所有文件\")",
        ".error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement)": ".error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement)",
        ".error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', \"element.\"].join(\" \")": ".error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', \"element.\"].join(\" \")",
        ".error([\"Popper: The `allowedAutoPlacements` option did not allow any\", \"placements. Ensure the `placement` option matches the variation\", \"of the allowed placements.\", 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(\" \")": ".error([\"Popper: The `allowedAutoPlacements` option did not allow any\", \"placements. Ensure the `placement` option matches the variation\", \"of the allowed placements.\", 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(\" \")",
        ".error(format(INVALID_MODIFIER_ERROR, String(modifier.name)": ".error(format(INVALID_MODIFIER_ERROR, String(modifier.name)",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', '\"' + String(modifier.enabled)": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', '\"' + String(modifier.enabled)",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(\", \")": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(\", \")",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', '\"' + String(modifier.fn)": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', '\"' + String(modifier.fn)",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', '\"' + String(modifier.fn)": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', '\"' + String(modifier.fn)",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', '\"' + String(modifier.requires)": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', '\"' + String(modifier.requires)",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', '\"' + String(modifier.requiresIfExists)": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', '\"' + String(modifier.requiresIfExists)",
        ".error('PopperJS: an invalid property has been provided to the \"' + modifier.name + '\" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s)": ".error('PopperJS: an invalid property has been provided to the \"' + modifier.name + '\" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s)",
        ".error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name)": ".error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name)",
        ".error(['Popper: \"auto\" placements require the \"flip\" modifier be', \"present and enabled to work.\"].join(\" \")": ".error(['Popper: \"auto\" placements require the \"flip\" modifier be', \"present and enabled to work.\"].join(\" \")",
        ".error(INVALID_ELEMENT_ERROR)": ".error(INVALID_ELEMENT_ERROR)",
        ".error(INFINITE_LOOP_ERROR)": ".error(INFINITE_LOOP_ERROR)",
        "name: \"Assigned\"": "name: \"指定\"",
        "name: \"applyStyles\"": "name: \"应用样式\"",
        "name: \"arrow\"": "name: \"arrow\"",
        "name: \"computeStyles\"": "name: \"计算方式\"",
        "name: \"eventListeners\"": "name: \"事件监听器\"",
        "name: \"flip\"": "name: \"浏览\"",
        "name: \"hide\"": "name: \"隐藏\"",
        "name: \"offset\"": "name: \"偏移\"",
        "name: \"popperOffsets\"": "name: \"防止偏移\"",
        "name: \"preventOverflow\"": "name: \"防止移除\"",
        "name: \"sameWidth\"": "name: \"相同宽度\"",
        "text: \"reference\"": "text: \"引用\"",
        "text: \"Support development\"": "text: \"支持开发\"",
        "text: \"If you enjoy Bulk Rename, consider \"": "text: \"如果你喜欢 Rename，请考虑\"",
        "text: \"buying me a coffee\"": "text: \"请我喝咖啡\"",
        "text: \", and following me on Twitter \"": "text: \"，在推特上关注我\"",
        "text: \"@oleglustenko\"": "text: \"@oleglustenko\"",
        "text: \"Preview\"": "text: \"预告\"",
        "text: `Total Files: ${this.plugin.settings.fileNames.length}`": "text: `Total Files: ${this.plugin.settings.fileNames.length}`",
        "text: \"Bulk Rename - Settings\"": "text: \"批量重命名 - 设置\"",
        "text: \"Warning: \"": "text: \"警告：\"",
        ".setText(\n        `Total Files: ${this.plugin.settings.fileNames.length}`\n      )": ".setText(\n        `Total Files: ${this.plugin.settings.fileNames.length}`\n      )",
        ".setButtonText(\"Folder\")": ".setButtonText(\"文件夹\")",
        ".setButtonText(\"Tags\")": ".setButtonText(\"标签\")",
        ".setButtonText(\"RegExp\")": ".setButtonText(\"正则表达式\")",
        ".setButtonText(\"Preview\")": ".setButtonText(\"预告\")",
        ".setButtonText(\"Rename\")": ".setButtonText(\"重命名\")",
        ".setName(\"Search by: \")": ".setName(\"搜索: \")",
        ".setName(\"Folder location\")": ".setName(\"文件夹位置\")",
        ".setName(\"Tag names \")": ".setName(\"标签名称\")",
        ".setName(\"RegExp Search\")": ".setName(\"正则表达式搜索\")",
        ".setName(\"Use RegExp For Existing & Replacement?\")": ".setName(\"使用正则表达式进行替换？\")",
        ".setName(\"Replace patterns\")": ".setName(\"替换模式\")",
        ".setDesc(\n      \"Only RegExp will work now, however it doesn't prevent you to pass string\"\n    )": ".setDesc(\n      \"使用正则表达式对重命名字段进行筛选\"\n    )",
        ".setPlaceholder(\"Here you will see files under folder location\")": ".setPlaceholder(\"在这里，您将看到文件夹位置下的文件\")",
        ".setPlaceholder(\n      \"How filenames will looks like after replacement(click preview first)\"\n    )": ".setPlaceholder(\n      \"文件名替换后的样子（先点击预览）\"\n    )",
        ".setPlaceholder(\"Example: folder1/\")": ".setPlaceholder(\"例如：文件夹1/\")",
        ".setPlaceholder(\"Example: #tag, #tag2\")": ".setPlaceholder(\"例如：#标签1 #标签2\")",
        ".setPlaceholder(\"Put your RegExp here\")": ".setPlaceholder(\"正则表达式内容\")",
        ".setPlaceholder(\"flags here\")": ".setPlaceholder(\"正则表达式标识(模式)\")",
        ".setPlaceholder(\"existing chars\")": ".setPlaceholder(\"现有字符\")",
        ".setPlaceholder(\"replace with\")": ".setPlaceholder(\"替换为\")",
        ".setTooltip(\"Use RegExp For Existing & Replacement?\")": ".setTooltip(\"使用正则表达式进行替换？\")",
        ".setTooltip(\"Your files won't be changed\")": ".setTooltip(\"文件不会被更改\")",
        ".setTooltip(\n        \"We don't have undone button yet!\\r\\n Do we need it?\"\n      )": ".setTooltip(\n        \"注意：操作将无法撤消\"\n      )"
    }
}