{
    "manifest": {
        "translationVersion": 1758803692371,
        "pluginVersion": "2.7.1"
    },
    "description": {
        "original": "A drag-and-drop time ruler combining the best of a task list and a calendar view (integrates with Tasks, Full Calendar, and Dataview).",
        "translation": "A drag-and-drop time ruler combining the best of a task list and a calendar view (integrates with Tasks, Full Calendar, and Dataview)."
    },
    "dict": {
        "Notice(\n        \"Invalid Dataview query: \" + this.settings.search + \". Please fix.\"\n      )": "Notice(\n        \"Invalid Dataview query: \" + this.settings.search + \". Please fix.\"\n      )",
        "Notice(\n          \"Time Ruler: Error in custom search filter function (check console)": "Notice(\n          \"Time Ruler: Error in custom search filter function (check console)",
        "Notice(`Time Ruler: failed to create file ${fileName}`)": "Notice(`时间规则器：创建文件${fileName}失败`)",
        "Notice(\"Task not loaded in Time Ruler\")": "Notice(\"任务未加载到时间规则中\")",
        "Notice(\"Timer complete\")": "Notice(\"定时器完成\")",
        "Notice(\"Time Ruler: calendars offline.\")": "Notice(\"时间标尺：日历脱机。\")",
        "Notice(\"Time Ruler: Error creating calendar - \" + err.message)": "Notice(\"时间标尺：创建日历时出错-\" + err.message)",
        "Notice(\"cursor is not on task\")": "Notice(\"光标不在任务上\")",
        "Notice(\"Please enable the DataView plugin for Time Ruler to work.\")": "Notice(\"请启用DataView插件以使Time Ruler工作。\")",
        "(log(asUint)": "(log(asUint)",
        "alog(boundary, errorInfo)": "alog(boundary, errorInfo)",
        " error(format)": " error(format)",
        " error(\"Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.\", callerName, componentName)": " error(\"Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.\", callerName, componentName)",
        " error(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value)": " error(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value)",
        " error(\"Received an unexpected object in getComponentNameFromType()": " error(\"Received an unexpected object in getComponentNameFromType()",
        " error(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)": " error(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",
        " error(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)": " error(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",
        " error('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef()": " error('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef()",
        " error(\"Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?\")": " error(\"Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?\")",
        " error(\"Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\")": " error(\"Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\")",
        " error(\"lazy: Expected the result of a dynamic import()": " error(\"lazy: Expected the result of a dynamic import()",
        " error(\"React.lazy(...)": " error(\"React.lazy(...)",
        " error(\"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)": " error(\"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)",
        " error(\"forwardRef requires a render function but was given %s.\", render === null ? \"null\" : typeof render)": " error(\"forwardRef requires a render function but was given %s.\", render === null ? \"null\" : typeof render)",
        " error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\", render.length === 1 ? \"Did you forget to use the ref parameter?\" : \"Any additional parameter will be undefined.\")": " error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\", render.length === 1 ? \"Did you forget to use the ref parameter?\" : \"Any additional parameter will be undefined.\")",
        " error(\"forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?\")": " error(\"forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?\")",
        " error(\"memo: The first argument must be a component. Instead received: %s\", type === null ? \"null\" : typeof type)": " error(\"memo: The first argument must be a component. Instead received: %s\", type === null ? \"null\" : typeof type)",
        " error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)": " error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\\n1. You might have mismatching versions of React and the renderer (such as React DOM)",
        " error(\"Calling useContext(Context.Consumer)": " error(\"Calling useContext(Context.Consumer)",
        " error(\"Calling useContext(Context.Provider)": " error(\"Calling useContext(Context.Provider)",
        " error(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")": " error(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")",
        " error(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)": " error(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)",
        " error(\"Failed %s type: %s\", location, error$1.message)": " error(\"Failed %s type: %s\", location, error$1.message)",
        " error('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner)": " error('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner)",
        " error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\")": " error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\")",
        " error(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")": " error(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")",
        " error(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", key2)": " error(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", key2)",
        " error(\"Invalid attribute `ref` supplied to `React.Fragment`.\")": " error(\"Invalid attribute `ref` supplied to `React.Fragment`.\")",
        " error(\"React.createElement: type is invalid -- expected a string (for built-in components)": " error(\"React.createElement: type is invalid -- expected a string (for built-in components)",
        " error(\"This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async ()": " error(\"This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async ()",
        " error(\"You called act(async ()": " error(\"You called act(async ()",
        " error(\"You seem to have overlapping act()": " error(\"You seem to have overlapping act()",
        " error(\"EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.\", registrationName)": " error(\"EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.\", registrationName)",
        " error(\"The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.\", attributeName, typeName(value)": " error(\"The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.\", attributeName, typeName(value)",
        " error(\"The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)": " error(\"The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)",
        " error(\"The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)": " error(\"The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.\", propName, typeName(value)",
        " error(\"The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value)": " error(\"The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.\", typeName(value)",
        " error(\"Form field values (value, checked, defaultValue, or defaultChecked props)": " error(\"Form field values (value, checked, defaultValue, or defaultChecked props)",
        " error(\"Invalid attribute name: `%s`\", attributeName)": " error(\"Invalid attribute name: `%s`\", attributeName)",
        " error(\"A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.\", JSON.stringify(url)": " error(\"A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.\", JSON.stringify(url)",
        " error(\"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\")": " error(\"You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\")",
        " error(\"You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.\")": " error(\"You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.\")",
        " error(\"%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both)": " error(\"%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both)",
        " error(\"%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)": " error(\"%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)",
        " error(\"Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.\")": " error(\"Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.\")",
        " error(\"Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.\")": " error(\"Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.\")",
        " error(\"Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.\")": " error(\"Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.\")",
        " error(\"The `%s` prop supplied to <select> must be an array if `multiple` is true.%s\", propName, getDeclarationErrorAddendum()": " error(\"The `%s` prop supplied to <select> must be an array if `multiple` is true.%s\", propName, getDeclarationErrorAddendum()",
        " error(\"The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s\", propName, getDeclarationErrorAddendum()": " error(\"The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s\", propName, getDeclarationErrorAddendum()",
        " error(\"Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)": " error(\"Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)",
        " error(\"%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)": " error(\"%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both)",
        " error(\"Use the `defaultValue` or `value` props instead of setting children on <textarea>.\")": " error(\"Use the `defaultValue` or `value` props instead of setting children on <textarea>.\")",
        " error(\n              \"Unsupported style property %s. Did you mean %s?\",\n              name,\n              // As Andi Smith suggests\n              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/)": " error(\n              \"Unsupported style property %s. Did you mean %s?\",\n              name,\n              // As Andi Smith suggests\n              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/)",
        " error(\"Unsupported vendor-prefixed style property %s. Did you mean %s?\", name, name.charAt(0)": " error(\"Unsupported vendor-prefixed style property %s. Did you mean %s?\", name, name.charAt(0)",
        " error(`Style property values shouldn't contain a semicolon. Try \"%s: %s\" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, \"\")": " error(`Style property values shouldn't contain a semicolon. Try \"%s: %s\" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, \"\")",
        " error(\"`NaN` is an invalid value for the `%s` css style property.\", name)": " error(\"`NaN` is an invalid value for the `%s` css style property.\", name)",
        " error(\"`Infinity` is an invalid value for the `%s` css style property.\", name)": " error(\"`Infinity` is an invalid value for the `%s` css style property.\", name)",
        " error(\"%s a style property during rerender (%s)": " error(\"%s a style property during rerender (%s)",
        " error(\"A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.\")": " error(\"A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.\")",
        " error(\"Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.\", name)": " error(\"Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.\", name)",
        " error(\"Invalid ARIA attribute `%s`. Did you mean `%s`?\", name, correctName)": " error(\"Invalid ARIA attribute `%s`. Did you mean `%s`?\", name, correctName)",
        " error(\"Unknown ARIA attribute `%s`. Did you mean `%s`?\", name, standardName)": " error(\"Unknown ARIA attribute `%s`. Did you mean `%s`?\", name, standardName)",
        " error(\"Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)": " error(\"Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)",
        " error(\"Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)": " error(\"Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props\", unknownPropString, type)",
        " error(\"`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.\", type)": " error(\"`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.\", type)",
        " error(\"`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.\", type)": " error(\"`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.\", type)",
        " error(\"React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.\")": " error(\"React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.\")",
        " error(\"Invalid event handler property `%s`. Did you mean `%s`?\", name, registrationName)": " error(\"Invalid event handler property `%s`. Did you mean `%s`?\", name, registrationName)",
        " error(\"Unknown event handler property `%s`. It will be ignored.\", name)": " error(\"Unknown event handler property `%s`. It will be ignored.\", name)",
        " error(\"Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.\", name)": " error(\"Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.\", name)",
        " error(\"Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.\")": " error(\"Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.\")",
        " error(\"The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.\")": " error(\"The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.\")",
        " error(\"Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.\", typeof value)": " error(\"Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.\", typeof value)",
        " error(\"Received NaN for the `%s` attribute. If this is expected, cast the value to a string.\", name)": " error(\"Received NaN for the `%s` attribute. If this is expected, cast the value to a string.\", name)",
        " error(\"Invalid DOM property `%s`. Did you mean `%s`?\", name, standardName)": " error(\"Invalid DOM property `%s`. Did you mean `%s`?\", name, standardName)",
        " error(\"React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.\", name, lowerCasedName)": " error(\"React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.\", name, lowerCasedName)",
        " error('Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()": " error('Received `%s` for a non-boolean attribute `%s`.\\n\\nIf you want to write it to the DOM, pass a string instead: %s=\"%s\" or %s={value.toString()",
        " error(\"Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?\", value, name, value === \"false\" ? \"The browser will interpret it as a truthy value.\" : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value)": " error(\"Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?\", value, name, value === \"false\" ? \"The browser will interpret it as a truthy value.\" : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value)",
        " error(\"Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)": " error(\"Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)",
        " error(\"Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)": " error(\"Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior \", unknownPropString, type)",
        " error(\"Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.\")",
        " error(\"Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.\")",
        " error(\"%s is accessing isMounted inside its render()": " error(\"%s is accessing isMounted inside its render()",
        " error(\"The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools\")": " error(\"The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools\")",
        " error(\"React instrumentation encountered an error: %s.\", err)": " error(\"React instrumentation encountered an error: %s.\", err)",
        " error(\"React instrumentation encountered an error: %s\", err)": " error(\"React instrumentation encountered an error: %s\", err)",
        " error(\"Should have found matching lanes. This is a bug in React.\")": " error(\"Should have found matching lanes. This is a bug in React.\")",
        " error('Did not expect a listenToNonDelegatedEvent()": " error('Did not expect a listenToNonDelegatedEvent()",
        " error('Did not expect a listenToNativeEvent()": " error('Did not expect a listenToNativeEvent()",
        " error(\"Prop `%s` did not match. Server: %s Client: %s\", propName, JSON.stringify(normalizedServerValue)": " error(\"Prop `%s` did not match. Server: %s Client: %s\", propName, JSON.stringify(normalizedServerValue)",
        " error(\"Extra attributes from the server: %s\", names)": " error(\"Extra attributes from the server: %s\", names)",
        " error(\"Expected `%s` listener to be a function, instead got `false`.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.\", registrationName, registrationName, registrationName)": " error(\"Expected `%s` listener to be a function, instead got `false`.\\n\\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.\", registrationName, registrationName, registrationName)",
        " error(\"Expected `%s` listener to be a function, instead got a value of `%s` type.\", registrationName, typeof listener)": " error(\"Expected `%s` listener to be a function, instead got a value of `%s` type.\", registrationName, typeof listener)",
        " error('Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText)": " error('Text content did not match. Server: \"%s\" Client: \"%s\"', normalizedServerText, normalizedClientText)",
        " error(\"<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.\", type)": " error(\"<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.\", type)",
        " error(\"The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\", type)": " error(\"The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.\", type)",
        " error(\"Did not expect server HTML to contain a <%s> in <%s>.\", child.nodeName.toLowerCase()": " error(\"Did not expect server HTML to contain a <%s> in <%s>.\", child.nodeName.toLowerCase()",
        " error('Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase()": " error('Did not expect server HTML to contain the text node \"%s\" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase()",
        " error(\"Expected server HTML to contain a matching <%s> in <%s>.\", tag, parentNode.nodeName.toLowerCase()": " error(\"Expected server HTML to contain a matching <%s> in <%s>.\", tag, parentNode.nodeName.toLowerCase()",
        " error('Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase()": " error('Expected server HTML to contain a matching text node for \"%s\" in <%s>.', text, parentNode.nodeName.toLowerCase()",
        " error(\"validateDOMNesting: when childText is passed, childTag should be null\")": " error(\"validateDOMNesting: when childText is passed, childTag should be null\")",
        " error(\"validateDOMNesting(...)": " error(\"validateDOMNesting(...)",
        " error(\"An error occurred during hydration. The server HTML was replaced with client content in <%s>.\", parentContainer.nodeName.toLowerCase()": " error(\"An error occurred during hydration. The server HTML was replaced with client content in <%s>.\", parentContainer.nodeName.toLowerCase()",
        " error(\"Unexpected pop.\")": " error(\"Unexpected pop.\")",
        " error(\"Unexpected Fiber popped.\")": " error(\"Unexpected Fiber popped.\")",
        " error(\"%s.childContextTypes is specified but there is no getChildContext()": " error(\"%s.childContextTypes is specified but there is no getChildContext()",
        " error(\"Expected to be hydrating. This is a bug in React. Please file an issue.\")": " error(\"Expected to be hydrating. This is a bug in React. Please file an issue.\")",
        " error(\"We should not be hydrating here. This is a bug in React. Please file a bug.\")": " error(\"We should not be hydrating here. This is a bug in React. Please file a bug.\")",
        " error(\"Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.\")",
        " error('Each child in a list should have a unique \"key\" prop. See https://reactjs.org/link/warning-keys for more information.')": " error('Each child in a list should have a unique \"key\" prop. See https://reactjs.org/link/warning-keys for more information.')",
        " error('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. We recommend using useRef()": " error('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. We recommend using useRef()",
        " error(\"Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.\")": " error(\"Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.\")",
        " error(\"Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \\u2014 the behavior is unsupported and could change in a future version.\", key2)": " error(\"Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \\u2014 the behavior is unsupported and could change in a future version.\", key2)",
        " error(\"Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()": " error(\"Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()",
        " error(\"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\")": " error(\"Using Maps as children is not supported. Use an array of keyed ReactElements instead.\")",
        " error(\"Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.\")": " error(\"Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.\")",
        " error(\"Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.\")",
        " error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer()": " error(\"Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer()",
        " error(\"An update (setState, replaceState, or forceUpdate)": " error(\"An update (setState, replaceState, or forceUpdate)",
        " error(\"%s received a final argument that is not an array (instead, received `%s`)": " error(\"%s received a final argument that is not an array (instead, received `%s`)",
        " error(\"%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.\", currentHookNameInDev)": " error(\"%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.\", currentHookNameInDev)",
        " error(\"The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\\n\\nPrevious: %s\\nIncoming: %s\", currentHookNameInDev, \"[\" + prevDeps.join(\", \")": " error(\"The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\\n\\nPrevious: %s\\nIncoming: %s\", currentHookNameInDev, \"[\" + prevDeps.join(\", \")",
        " error(\"Internal React error: Expected static flag was missing. Please notify the React team.\")": " error(\"Internal React error: Expected static flag was missing. Please notify the React team.\")",
        " error(\"Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.\")": " error(\"Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.\")",
        " error(\"The result of getServerSnapshot should be cached to avoid an infinite loop\")": " error(\"The result of getServerSnapshot should be cached to avoid an infinite loop\")",
        " error(\"The result of getSnapshot should be cached to avoid an infinite loop\")": " error(\"The result of getSnapshot should be cached to avoid an infinite loop\")",
        " error(\"Expected useImperativeHandle()": " error(\"Expected useImperativeHandle()",
        " error(\"State updates from the useState()": " error(\"State updates from the useState()",
        " error(\"Do not call Hooks inside useEffect(...)": " error(\"Do not call Hooks inside useEffect(...)",
        " error(\"%s(...)": " error(\"%s(...)",
        " error(\"%s.getDerivedStateFromProps()": " error(\"%s.getDerivedStateFromProps()",
        " error(\"%s.shouldComponentUpdate()": " error(\"%s.shouldComponentUpdate()",
        " error(\"getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?\", name)": " error(\"getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?\", name)",
        " error(\"getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.\", name)": " error(\"getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.\", name)",
        " error(\"propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.\", name)": " error(\"propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.\", name)",
        " error(\"contextType was defined as an instance property on %s. Use a static property to define contextType instead.\", name)": " error(\"contextType was defined as an instance property on %s. Use a static property to define contextType instead.\", name)",
        " error(\"%s uses the legacy childContextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext()": " error(\"%s uses the legacy childContextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext()",
        " error(\"%s uses the legacy contextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext()": " error(\"%s uses the legacy contextTypes API which is no longer supported and will be removed in the next major release. Use React.createContext()",
        " error(\"contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.\", name)": " error(\"contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.\", name)",
        " error(\"%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.\", name)": " error(\"%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.\", name)",
        " error(\"%s has a method called componentShouldUpdate()": " error(\"%s has a method called componentShouldUpdate()",
        " error(\"%s has a method called shouldComponentUpdate()": " error(\"%s has a method called shouldComponentUpdate()",
        " error(\"%s has a method called componentDidUnmount()": " error(\"%s has a method called componentDidUnmount()",
        " error(\"%s has a method called componentDidReceiveProps()": " error(\"%s has a method called componentDidReceiveProps()",
        " error(\"%s has a method called componentWillRecieveProps()": " error(\"%s has a method called componentWillRecieveProps()",
        " error(\"%s has a method called UNSAFE_componentWillRecieveProps()": " error(\"%s has a method called UNSAFE_componentWillRecieveProps()",
        " error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.\", name, name)": " error(\"Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.\", name, name)",
        " error(\"%s: getSnapshotBeforeUpdate()": " error(\"%s: getSnapshotBeforeUpdate()",
        " error(\"%s: getDerivedStateFromProps()": " error(\"%s: getDerivedStateFromProps()",
        " error(\"%s: getDerivedStateFromError()": " error(\"%s: getDerivedStateFromError()",
        " error(\"%s.state: must be set to an object or null\", name)": " error(\"%s.state: must be set to an object or null\", name)",
        " error(\"%s.getChildContext()": " error(\"%s.getChildContext()",
        " error(\"%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext()": " error(\"%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext()",
        " error(\"%s.componentWillMount()": " error(\"%s.componentWillMount()",
        " error(\"%s.componentWillReceiveProps()": " error(\"%s.componentWillReceiveProps()",
        " error(\"%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.\", componentName)": " error(\"%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.\", componentName)",
        " error(\"%s: Error boundaries should implement getDerivedStateFromError()": " error(\"%s: Error boundaries should implement getDerivedStateFromError()",
        " error(\"%s: Support for defaultProps will be removed from memo components in a future major release. Use JavaScript default parameters instead.\", componentName)": " error(\"%s: Support for defaultProps will be removed from memo components in a future major release. Use JavaScript default parameters instead.\", componentName)",
        " error(\"It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.\", getComponentNameFromFiber(workInProgress2)": " error(\"It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.\", getComponentNameFromFiber(workInProgress2)",
        " error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.\", componentName, componentName)": " error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.\", componentName, componentName)",
        " error(\"Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()": " error(\"Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()",
        " error(\"%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.\", componentName)": " error(\"%s: Support for defaultProps will be removed from function components in a future major release. Use JavaScript default parameters instead.\", componentName)",
        " error(\"%s: Function components do not support getDerivedStateFromProps.\", _componentName3)": " error(\"%s: Function components do not support getDerivedStateFromProps.\", _componentName3)",
        " error(\"%s: Function components do not support contextType.\", _componentName4)": " error(\"%s: Function components do not support contextType.\", _componentName4)",
        " error(\"Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container)": " error(\"Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container)",
        " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase()": " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. Use lowercase \"%s\" instead.', revealOrder, revealOrder.toLowerCase()",
        " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase()": " error('\"%s\" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use \"%ss\" instead.', revealOrder, revealOrder.toLowerCase()",
        " error('\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)": " error('\"%s\" is not a supported revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)",
        " error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)": " error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean \"together\", \"forwards\" or \"backwards\"?', revealOrder)",
        " error('\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?', tailMode)": " error('\"%s\" is not a supported value for tail on <SuspenseList />. Did you mean \"collapsed\" or \"hidden\"?', tailMode)",
        " error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?', tailMode)": " error('<SuspenseList tail=\"%s\" /> is only valid if revealOrder is \"forwards\" or \"backwards\". Did you mean to specify revealOrder=\"forwards\"?', tailMode)",
        " error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>\", type, index2, type)": " error(\"A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>\", type, index2, type)",
        " error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder)": " error('A single row was passed to a <SuspenseList revealOrder=\"%s\" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder)",
        " error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\")": " error(\"The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?\")",
        " error(\"Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\")": " error(\"Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?\")",
        " error(\"A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.\")": " error(\"A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.\")",
        " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(current3)": " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(current3)",
        " error(\"Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"%s.getSnapshotBeforeUpdate()": " error(\"%s.getSnapshotBeforeUpdate()",
        " error(\"%s must not return anything besides a function, which is used for clean-up.%s\", hookName, addendum)": " error(\"%s must not return anything besides a function, which is used for clean-up.%s\", hookName, addendum)",
        " error(\"Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)": " error(\"Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(finishedWork)": " error(\"Unexpected return value from a callback ref in %s. A callback ref should not return a function.\", getComponentNameFromFiber(finishedWork)",
        " error(\"Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef()": " error(\"Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef()",
        " error(\"The current testing environment is not configured to support act(...)": " error(\"The current testing environment is not configured to support act(...)",
        " error(\"useInsertionEffect must not schedule updates.\")": " error(\"useInsertionEffect must not schedule updates.\")",
        " error(\"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\")": " error(\"Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.\")",
        " error(\"root.finishedLanes should not be empty during a commit. This is a bug in React.\")": " error(\"root.finishedLanes should not be empty during a commit. This is a bug in React.\")",
        " error(\"Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\\n\\nError message:\\n\\n%s\", error$1)": " error(\"Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\\n\\nError message:\\n\\n%s\", error$1)",
        " error(\"Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\")": " error(\"Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.\")",
        " error(\"Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.\")": " error(\"Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.\")",
        " error(\"Cannot update a component (`%s`)": " error(\"Cannot update a component (`%s`)",
        " error(\"Cannot update during an existing state transition (such as within `render`)": " error(\"Cannot update during an existing state transition (such as within `render`)",
        " error(\"An update to %s inside a test was not wrapped in act(...)": " error(\"An update to %s inside a test was not wrapped in act(...)",
        " error(\"A suspended resource finished loading inside a test, but the event was not wrapped in act(...)": " error(\"A suspended resource finished loading inside a test, but the event was not wrapped in act(...)",
        " error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id)": " error('Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id)",
        " error(\"%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName)": " error(\"%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\", methodName, methodName, componentName)",
        " error(\"Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\\n\\nCheck the render method of %s.\", getComponentNameFromFiber(current2)": " error(\"Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\\n\\nCheck the render method of %s.\", getComponentNameFromFiber(current2)",
        " error(\"render(...)": " error(\"render(...)",
        " error(\"You passed a container to the second argument of root.render(...)": " error(\"You passed a container to the second argument of root.render(...)",
        " error(\"You passed a second argument to root.render(...)": " error(\"You passed a second argument to root.render(...)",
        " error(\"unmount(...)": " error(\"unmount(...)",
        " error(\"Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.\")": " error(\"Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.\")",
        " error(\"You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\\n\\n  let root = createRoot(domContainer)": " error(\"You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\\n\\n  let root = createRoot(domContainer)",
        " error(\"Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)": " error(\"Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)",
        " error(\"createRoot()": " error(\"createRoot()",
        " error(\"You are calling ReactDOMClient.createRoot()": " error(\"You are calling ReactDOMClient.createRoot()",
        " error(\"render()": " error(\"render()",
        " error(\"findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\")": " error(\"findDOMNode is deprecated and will be removed in the next major release. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\")",
        " error(\"%s is accessing findDOMNode inside its render()": " error(\"%s is accessing findDOMNode inside its render()",
        " error(\"ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")": " error(\"ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")",
        " error(\"You are calling ReactDOM.hydrate()": " error(\"You are calling ReactDOM.hydrate()",
        " error(\"ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")": " error(\"ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot\")",
        " error(\"You are calling ReactDOM.render()": " error(\"You are calling ReactDOM.render()",
        " error(\"ReactDOM.unstable_renderSubtreeIntoContainer()": " error(\"ReactDOM.unstable_renderSubtreeIntoContainer()",
        " error(\"unmountComponentAtNode is deprecated and will be removed in the next major release. Switch to the createRoot API. Learn more: https://reactjs.org/link/switch-to-createroot\")": " error(\"unmountComponentAtNode is deprecated and will be removed in the next major release. Switch to the createRoot API. Learn more: https://reactjs.org/link/switch-to-createroot\")",
        " error(\"You are calling ReactDOM.unmountComponentAtNode()": " error(\"You are calling ReactDOM.unmountComponentAtNode()",
        " error(\"unmountComponentAtNode()": " error(\"unmountComponentAtNode()",
        " error(\"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")": " error(\"React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")",
        " error('You are importing createRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')": " error('You are importing createRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')",
        " error('You are importing hydrateRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')": " error('You are importing hydrateRoot from \"react-dom\" which is not supported. You should instead import it from \"react-dom/client\".')",
        " error(\"flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.\")": " error(\"flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.\")",
        ".error(match2[0])": ".error(match2[0])",
        ".error(\"unsupported pseudo: \" + pseudo)": ".error(\"unsupported pseudo: \" + pseudo)",
        ".error(\"unsupported lang: \" + lang)": ".error(\"unsupported lang: \" + lang)",
        ".error(selector)": ".error(selector)",
        ".error(\"Invalid XML: \" + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function(el)": ".error(\"Invalid XML: \" + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function(el)",
        ".error(callbackName + \" was not called\")": ".error(callbackName + \" was not called\")",
        ".error(\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\n        )": ".error(\n          \"You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.\"\n        )",
        ".error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          )": ".error(\n            \"The result of getSnapshot should be cached to avoid an infinite loop\"\n          )",
        " error(\"React.jsx: type is invalid -- expected a string (for built-in components)": " error(\"React.jsx: type is invalid -- expected a string (for built-in components)",
        " error(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\")": " error(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\")",
        " error('A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName)": " error('A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName)",
        ".error(\"No toISOString function in exdate[name]\", exdate[name])": ".error(\"No toISOString function in exdate[name]\", exdate[name])",
        ".error(\"No toISOString function in curr.recurrenceid\", curr.recurrenceid)": ".error(\"No toISOString function in curr.recurrenceid\", curr.recurrenceid)",
        ".error(\"Using TZID without Luxon available is unsupported. Returned times are in UTC, not the requested time zone\")": ".error(\"Using TZID without Luxon available is unsupported. Returned times are in UTC, not the requested time zone\")",
        ".error(\"ERROR when trying to convert to ISOString\", error)": ".error(\"ERROR when trying to convert to ISOString\", error)",
        ".error(\"No toISOString function in curr.start\", curr.start)": ".error(\"No toISOString function in curr.start\", curr.start)",
        ".error(err)": ".error(err)",
        "name : \"\";\n          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"": "name : \"\";\n          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"",
        "name: `%s`": "name: `%s`",
        "name: \"className\"": "name: \"className\"",
        "name: \"name\"": "name: \"name\"",
        "name: \"attributeName\"": "name: \"attributeName\"",
        "name: \"glyphName\"": "name: \"glyphName\"",
        "name : \"invokeguardedcallback\"": "name : \"invokeguardedcallback\"",
        "name: \"Anno Domini\"": "name: \"Anno Domini\"",
        "name: \"Before Christ\"": "name: \"Before Christ\"",
        "name: \"pointercancel\"": "name: \"pointercancel\"",
        "name: \"pointermove\"": "name: \"pointermove\"",
        "name: \"pointerup\"": "name: \"pointerup\"",
        "name: \"mousemove\"": "name: \"mousemove\"",
        "name: \"mouseup\"": "name: \"mouseup\"",
        "name: \"touchcancel\"": "name: \"touchcancel\"",
        "name: \"touchmove\"": "name: \"touchmove\"",
        "name: \"touchend\"": "name: \"touchend\"",
        "name: \"Open Time Ruler\"": "name: \"Open Time Ruler\"",
        "name: \"Open Time Ruler in Main Tab\"": "name: \"Open Time Ruler in Main Tab\"",
        "name: \"Open Time Ruler in Sidebar\"": "name: \"Open Time Ruler in Sidebar\"",
        "name: \"Reveal in Time Ruler\"": "name: \"Reveal in Time Ruler\"",
        "link: \"xmlnsXlink\"": "link: \"xmlnsXlink\"",
        "text: \"text/plain\"": "text: \"text/plain\"",
        "text: \"responseText\"": "text: \"responseText\"",
        "search: \"\",\n  taskSearch: \"": "search: \"\",\n  taskSearch: \"",
        ".setText(\"start\")": ".setText(\"开始\")",
        ".setText(\"end\")": ".setText(\"结束\")",
        ".setName(\"Preferred Field Format\")": ".setName(\"首选字段格式\")",
        ".setName(\"Muted\")": ".setName(\"静音\")",
        ".setName(\"Timer Event\")": ".setName(\"定时器事件\")",
        ".setName(\"Borders\")": ".setName(\"边界\")",
        ".setName(\"24 Hour Format\")": ".setName(\"24小时格式\")",
        ".setName(\"Day Start & End\")": ".setName(\"日期开始 & 结束\")",
        ".setName(\"Extend Blocks to Next\")": ".setName(\"将块扩展到下一个\")",
        ".setName(\"Show Unscheduled Subtasks\")": ".setName(\"显示未安排的子任务\")",
        ".setName(\"Custom Filter\")": ".setName(\"自定义过滤器\")",
        ".setName(\"Filter Function\")": ".setName(\"过滤函数\")",
        ".setName(\"Task Filter\")": ".setName(\"任务筛选器\")",
        ".setName(\"Custom Statuses\")": ".setName(\"自定义状态\")",
        ".setName(\"Show Completed\")": ".setName(\"显示已完成\")",
        ".setName(\"Add Tasks to End\")": ".setName(\"将任务添加到末尾\")",
        ".setName(\"Open in Main Tab\")": ".setName(\"在主选项卡中打开\")",
        ".setName(\"Calendars\")": ".setName(\"日历\")",
        ".setDesc(\n      \"Reload the Time Ruler view for changes to take effect.\"\n    )": ".setDesc(\n      \"重新加载“时间规则”视图以使更改生效。\"\n    )",
        ".setDesc(\n      \"Choose which style of inline fields to use as a default (parses scheduled date/time, due, priority, completion, reminder, and start).\"\n    )": ".setDesc(\n      \"选择使用哪种样式的内联字段作为默认值（解析计划日期/时间、到期、优先级、完成、提醒和开始）。\"\n    )",
        ".setDesc(\"Turn off playing sounds on task completion.\")": ".setDesc(\"任务完成时关闭播放声音。\")",
        ".setDesc(\"Toggle the event triggered on timer end.\")": ".setDesc(\"切换定时器结束时触发的事件。\")",
        ".setDesc(\"Toggle borders around days.\")": ".setDesc(\"在几天之间切换边框。\")",
        ".setDesc(\n      \"Toggle between AM/PM hours and 24-hour format in the Time Ruler.\"\n    )": ".setDesc(\n      \"在时间标尺中在AM/PM小时和24小时格式之间切换。\"\n    )",
        ".setDesc(\"Choose the boundaries of the Time Ruler hour tick-marks.\")": ".setDesc(\"选择时间标尺小时刻度标记的边界。\")",
        ".setDesc(\n      \"Extend blocks without defined length to the start of the next block.\"\n    )": ".setDesc(\n      \"将没有定义长度的块延伸到下一个块的开头。\"\n    )",
        ".setDesc(\"Show subtasks without a set scheduled date.\")": ".setDesc(\"显示没有设定计划日期的子任务。\")",
        ".setDesc(\n      `Enable a custom Dataview filter to filter tasks (at the document level) which is passed to dv.pages('<custom filter>')`\n    )": ".setDesc(\n      `启用自定义Dataview筛选器以筛选传递给dv.pages的任务（在文档级别）（“＜自定义筛选器＞”）`\n    )",
        ".setDesc(\n      `Provide a filter function that takes a task DataArray from dv.pages()['file']['tasks'] and returns the filtered array.`\n    )": ".setDesc(\n      `提供一个过滤器函数，该函数从dv.pages（）[“文件”][“任务”]中获取任务DataArray，并返回过滤后的数组。`\n    )",
        ".setDesc(\"Only include tasks which match the following search.\")": ".setDesc(\"仅包括与以下搜索匹配的任务。\")",
        ".setDesc(\n      \"Include only, or exclude certain, characters between the double brackets [ ] of a task. Write characters with no separation.\"\n    )": ".setDesc(\n      \"仅包含或排除任务双括号[]之间的某些字符。书写没有分隔的字符。\"\n    )",
        ".setDesc(\"Show completed tasks\")": ".setDesc(\"显示已完成的任务\")",
        ".setDesc(\"Toggle adding new tasks to the start or end of headings/files.\")": ".setDesc(\"切换将新任务添加到标题/文件的开头或结尾。\")",
        ".setDesc(\"Toggle opening Time Ruler in the main view vs. the sidebar.\")": ".setDesc(\"在主视图和侧边栏中切换打开时间标尺。\")",
        ".setDesc(\"View readonly calendars in Time Ruler.\")": ".setDesc(\"在时间标尺中查看只读日历。\")",
        ".setPlaceholder(`dv.pages('<custom filter>')`)": ".setPlaceholder(`dv.pages（“<自定义过滤器>”）`)",
        ".setPlaceholder(\n        `example: (tasks) => tasks.where(task => task[\"customProperty\"] === true)`\n      )": ".setPlaceholder(\n        `示例：（tasks）=>tasks。其中（task=>task[“customProperty”]===true）`\n      )",
        ".setPlaceholder(\"Match text in tasks\")": ".setPlaceholder(\"匹配任务中的文本\")",
        ".setPlaceholder(\"Statuses\")": ".setPlaceholder(\"状态\")",
        ".setPlaceholder(\"Calendar Share Link (iCal format)\")": ".setPlaceholder(\"日历共享链接（iCal格式）\")",
        ".setTooltip(\"Exclude the current value\")": ".setTooltip(\"排除当前值\")",
        ".setTitle(\"Reveal in Time Ruler\")": ".setTitle(\"揭示时间规则\")",
        ".setTitle(\"Do\")": ".setTitle(\"执行\")",
        ".setTitle(\"Today\")": ".setTitle(\"今天\")",
        ".setTitle(\"Tomorrow\")": ".setTitle(\"明天\")",
        ".setTitle(\"Now\")": ".setTitle(\"现在\")",
        ".setTitle(\"Next week\")": ".setTitle(\"下周\")",
        ".setTitle(\"Unschedule\")": ".setTitle(\"未安排\")"
    }
}