{
    "manifest": {
        "translationVersion": 1750586111076,
        "pluginVersion": "0.3.0"
    },
    "description": {
        "original": "Add icons to your Obsidian notes.",
        "translation": "将图标添加到你的Obsidian笔记。"
    },
    "dict": {
        ".log(suggestedIcon)": ".log(suggestedIcon)",
        ".log(block)": ".log(block)",
        ".log(\"loading plugin\")": ".log(\"loading plugin\")",
        ".log(\"unloading plugin\")": ".log(\"unloading plugin\")",
        " error(format)": " error(format)",
        " error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName)": " error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName)",
        " error('Received an unexpected object in getComponentName()": " error('Received an unexpected object in getComponentName()",
        " error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)": " error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)",
        " error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)": " error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)",
        " error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef()": " error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef()",
        " error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits)": " error('createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits)",
        " error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?')": " error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?')",
        " error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?')": " error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?')",
        " error('lazy: Expected the result of a dynamic import()": " error('lazy: Expected the result of a dynamic import()",
        " error('React.lazy(...)": " error('React.lazy(...)",
        " error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)": " error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)",
        " error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render)": " error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render)",
        " error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.')": " error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.')",
        " error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?')": " error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?')",
        " error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type)": " error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type)",
        " error('useContext()": " error('useContext()",
        " error('Calling useContext(Context.Consumer)": " error('Calling useContext(Context.Consumer)",
        " error('Calling useContext(Context.Provider)": " error('Calling useContext(Context.Provider)",
        " error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.')": " error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.')",
        " error('Failed %s type: %s', location, error$1.message)": " error('Failed %s type: %s', location, error$1.message)",
        " error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner)": " error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner)",
        " error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown')": " error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown')",
        " error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.')": " error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.')",
        " error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key)": " error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key)",
        " error('Invalid attribute `ref` supplied to `React.Fragment`.')": " error('Invalid attribute `ref` supplied to `React.Fragment`.')",
        " error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components)": " error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components)",
        " error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext()": " error('%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext()",
        " error('Invalid attribute name: `%s`', attributeName)": " error('Invalid attribute name: `%s`', attributeName)",
        " error('A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url)": " error('A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url)",
        " error('Do not call Hooks inside useEffect(...)": " error('Do not call Hooks inside useEffect(...)",
        " error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev)": " error('%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev)",
        " error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\\n\\n' + 'Previous: %s\\n' + 'Incoming: %s', currentHookNameInDev, \"[\" + nextDeps.join(', ')": " error('The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\\n\\n' + 'Previous: %s\\n' + 'Incoming: %s', currentHookNameInDev, \"[\" + nextDeps.join(', ')",
        " error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer()": " error('Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer()",
        " error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.')": " error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.')",
        " error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.')": " error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.')",
        " error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.')": " error('A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.')",
        " error('Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests\r\n    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/)": " error('Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests\r\n    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/)",
        " error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0)": " error('Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0)",
        " error(\"Style property values shouldn't contain a semicolon. \" + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')": " error(\"Style property values shouldn't contain a semicolon. \" + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')",
        " error('`NaN` is an invalid value for the `%s` css style property.', name)": " error('`NaN` is an invalid value for the `%s` css style property.', name)",
        " error('`Infinity` is an invalid value for the `%s` css style property.', name)": " error('`Infinity` is an invalid value for the `%s` css style property.', name)",
        " error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name)": " error('Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name)",
        " error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName)": " error('Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName)",
        " error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName)": " error('Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName)",
        " error('Invalid aria prop %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type)": " error('Invalid aria prop %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type)",
        " error('Invalid aria props %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type)": " error('Invalid aria props %s on <%s> tag. ' + 'For details, see https://reactjs.org/link/invalid-aria-props', unknownPropString, type)",
        " error('`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type)": " error('`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type)",
        " error('`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type)": " error('`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type)",
        " error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.')": " error('React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.')",
        " error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName)": " error('Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName)",
        " error('Unknown event handler property `%s`. It will be ignored.', name)": " error('Unknown event handler property `%s`. It will be ignored.', name)",
        " error('Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name)": " error('Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name)",
        " error('Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.')": " error('Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.')",
        " error('The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.')": " error('The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.')",
        " error('Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value)": " error('Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value)",
        " error('Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name)": " error('Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name)",
        " error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName)": " error('Invalid DOM property `%s`. Did you mean `%s`?', name, standardName)",
        " error('Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()": " error('Received `%s` for a non-boolean attribute `%s`.\\n\\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s=\"%s\" or %s={value.toString()",
        " error('Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value)": " error('Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string \"false\".', name, value)",
        " error('Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type)": " error('Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type)",
        " error('Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type)": " error('Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://reactjs.org/link/attribute-behavior ', unknownPropString, type)",
        " error('%s(...)": " error('%s(...)",
        " error('Only strings and numbers are supported as <option> children.')": " error('Only strings and numbers are supported as <option> children.')",
        " error('%s.getDerivedStateFromProps()": " error('%s.getDerivedStateFromProps()",
        " error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', _componentName2, _componentName2)": " error(\"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" + 'This is likely to cause errors. Change %s to extend React.Component instead.', _componentName2, _componentName2)",
        " error('%s.getChildContext()": " error('%s.getChildContext()",
        " error('Unexpected pop.')": " error('Unexpected pop.')",
        " error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?')": " error('Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?')",
        " error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', element.type)": " error('<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', element.type)",
        " error('%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both)": " error('%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both)",
        " error('%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both)": " error('%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both)",
        " error('Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both)": " error('Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both)",
        " error('Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.')": " error('Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.')",
        " error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.', propName)": " error('The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.', propName)",
        " error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.', propName)": " error('The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.', propName)",
        " error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both)": " error('Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both)",
        "name : '';\r\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '": "name : '';\r\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '",
        "name: `%s`": "name: `%s`",
        "name: 'className'": "name: 'className'",
        "name: 'name'": "name: 'name'",
        "name: 'attributeName'": "name: 'attributeName'",
        "name: 'glyphName'": "name: 'glyphName'",
        "name: \"Remix Icon\"": "name: \"Remix Icon\"",
        "name: \"Font Awesome\"": "name: \"Font Awesome\"",
        "name: \"Insert Icon\"": "name: \"Insert Icon\"",
        "link: 'xmlnsXlink'": "link: 'xmlnsXlink'",
        "text: \"Icons Plugin Settings\"": "text: \"Icons 插件设置\"",
        ".setName(\"Enable Remix Icon (Solid)\")": ".setName(\"启用 Remix图标（纯色）\")",
        ".setName(\"Enable Remix Icon (Regular)\")": ".setName(\"启用 Remix图标（常规）\")",
        ".setName(\"Enable FontAwesome (Solid)\")": ".setName(\"启用 FontAwesome（纯色）\")",
        ".setName(\"Enable FontAwesome (Regular)\")": ".setName(\"启用 FontAwesome（常规）\")",
        ".setName(\"Icon Alias Mapping\")": ".setName(\"图标别名映射\")",
        ".setDesc(\"This enables all solid variants from the Remix Icon set. More Information: https://remixicon.com/\")": ".setDesc(\"这启用来自 Remix 图标集中的所有纯色变体。更多信息：https://remixicon.com/\")",
        ".setDesc(\"This enables all regular variants from the Remix Icon set. More Information: https://remixicon.com/\")": ".setDesc(\"这启用来自 Remix 图标集中的所有常规变体。更多信息：https://remixicon.com/\")",
        ".setDesc(\"This enables all solid variants from the FontAwesome set. More Information: https://fontawesome.com/\")": ".setDesc(\"这启用来自 FontAwesome 图标集中的所有纯色变体。更多信息：https://fontawesome.com/\")",
        ".setDesc(\"This enables all regular variants from the FontAwesome set. More Information: https://fontawesome.com/\")": ".setDesc(\"这启用来自 FontAwesome 图标集中的所有常规变体。更多信息：https://fontawesome.com/\")",
        ".setDesc(\"Add aliases for your favorite icons (one alias-to-icon mapping per line). For example, to use `heart` as an alias for the fas:Heart icon, enter: heart=fas:Heart\")": ".setDesc(\"为您的喜爱图标添加别名（每行一个别名到图标的映射）。例如，要使用 `heart` 作为 fas:Heart 图标的别名，请输入：heart=fas:Heart\")"
    }
}