{
    "manifest": {
        "translationVersion": 1758803942179,
        "pluginVersion": "3.2.0"
    },
    "description": {
        "original": "Get, change or otherwise interact with your notes in Obsidian via a REST API.",
        "translation": "通过 REST API 获取、更改或以其他方式与 Obsidian 中的笔记进行交互。"
    },
    "dict": {
        "text: \"How to Access\"": "text: \"如何访问\"",
        "text: \"Settings\"": "text: \"设置\"",
        "text: \"Advanced Settings\"": "text: \"高级设置\"",
        ".setName(\"Re-generate Certificates\")": ".setName(\"重新生成证书\")",
        "text: \"Local REST API\"": "text: \"Local REST API\"",
        "text: \"For example, the following request will return all notes in the root directory of your vault:\"": "text: \"例如，以下请求将返回保管库根目录中的所有笔记：\"",
        ".setButtonText(\"Reset All Crypto\")": ".setButtonText(\"Reset All Crypto\")",
        ".setButtonText(\"Re-generate Certificates\")": ".setButtonText(\"Re-generate Certificates\")",
        ".setName(\"Reset All Cryptography\")": ".setName(\"重置所有密码\")",
        ".setName(\"Enable Encrypted (HTTPs) Server\")": ".setName(\"启用加密（HTTPs）服务器\")",
        "Notice(\"Failed to read the daily note template\")": "Notice(\"Failed to read the daily note template\")",
        "Notice(\"Unable to create new file.\")": "Notice(\"Unable to create new file.\")",
        ".log(r)": ".log(r)",
        ".log(message.standardFull)": ".log(message.standardFull)",
        "_log();\n    require_md_all()": "_log();\n    require_md_all()",
        " log(message, site)": " log(message, site)",
        " log() {\n      return typeof console === \"object\" && console.log && Function.prototype.apply.call(console.log, console, arguments)": " log() {\n      return typeof console === \"object\" && console.log && Function.prototype.apply.call(console.log, console, arguments)",
        " log() {\n      return stream.write(util.format.apply(util, arguments)": " log() {\n      return stream.write(util.format.apply(util, arguments)",
        ".log(a)": ".log(a)",
        ".log(...messages)": ".log(...messages)",
        ".log(\"|\", cst.prettyToken(source)": ".log(\"|\", cst.prettyToken(source)",
        ".log(`[REST API] ${req.method} ${req.url} => ${res.statusCode}`)": ".log(`[REST API] ${req.method} ${req.url} => ${res.statusCode}`)",
        ".log(\"[REST API] Added new API extension\", pluginManifest)": ".log(\"[REST API] Added new API extension\", pluginManifest)",
        ".log(`[REST API] Listening on https://${(_c = this.settings.bindingHost)": ".log(`[REST API] Listening on https://${(_c = this.settings.bindingHost)",
        ".log(`[REST API] Listening on http://${(_e = this.settings.bindingHost)": ".log(`[REST API] Listening on http://${(_e = this.settings.bindingHost)",
        ".error(c, {\n          message: \"Unexpected message. Received TLS record out of order.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.unexpected_message\n          }\n        })": ".error(c, {\n          message: \"Unexpected message. Received TLS record out of order.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.unexpected_message\n          }\n        })",
        ".error(c, {\n              message: \"TLS version change is disallowed during renegotiation.\",\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description: tls.Alert.Description.protocol_version\n              }\n            })": ".error(c, {\n              message: \"TLS version change is disallowed during renegotiation.\",\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description: tls.Alert.Description.protocol_version\n              }\n            })",
        ".error(c, {\n            message: \"No cipher suites in common.\",\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.handshake_failure\n            },\n            cipherSuite: forge3.util.bytesToHex(msg.cipher_suite)": ".error(c, {\n            message: \"No cipher suites in common.\",\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.handshake_failure\n            },\n            cipherSuite: forge3.util.bytesToHex(msg.cipher_suite)",
        ".error(c, {\n          message: \"Incompatible TLS version.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        })": ".error(c, {\n          message: \"Incompatible TLS version.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        })",
        ".error(c, {\n          message: \"Invalid Certificate message. Message too short.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.illegal_parameter\n          }\n        })": ".error(c, {\n          message: \"Invalid Certificate message. Message too short.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.illegal_parameter\n          }\n        })",
        ".error(c, {\n          message: \"Could not parse certificate list.\",\n          cause: ex,\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.bad_certificate\n          }\n        })": ".error(c, {\n          message: \"Could not parse certificate list.\",\n          cause: ex,\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.bad_certificate\n          }\n        })",
        ".error(c, {\n          message: client ? \"No server certificate provided.\" : \"No client certificate provided.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.illegal_parameter\n          }\n        })": ".error(c, {\n          message: client ? \"No server certificate provided.\" : \"No client certificate provided.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.illegal_parameter\n          }\n        })",
        ".error(c, {\n          message: \"Invalid key parameters. Only RSA is supported.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.unsupported_certificate\n          }\n        })": ".error(c, {\n          message: \"Invalid key parameters. Only RSA is supported.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.unsupported_certificate\n          }\n        })",
        ".error(c, {\n            message: \"Could not get private key.\",\n            cause: ex,\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.internal_error\n            }\n          })": ".error(c, {\n            message: \"Could not get private key.\",\n            cause: ex,\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.internal_error\n            }\n          })",
        ".error(c, {\n          message: \"No private key set.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.internal_error\n          }\n        })": ".error(c, {\n          message: \"No private key set.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.internal_error\n          }\n        })",
        ".error(c, {\n          message: \"Invalid CertificateRequest. Message too short.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.illegal_parameter\n          }\n        })": ".error(c, {\n          message: \"Invalid CertificateRequest. Message too short.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.illegal_parameter\n          }\n        })",
        ".error(c, {\n          message: \"Invalid CertificateVerify. Message too short.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.illegal_parameter\n          }\n        })": ".error(c, {\n          message: \"Invalid CertificateVerify. Message too short.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.illegal_parameter\n          }\n        })",
        ".error(c, {\n          message: \"Bad signature in CertificateVerify.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.handshake_failure\n          }\n        })": ".error(c, {\n          message: \"Bad signature in CertificateVerify.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.handshake_failure\n          }\n        })",
        ".error(c, {\n          message: \"Invalid ServerHelloDone message. Invalid length.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.record_overflow\n          }\n        })": ".error(c, {\n          message: \"Invalid ServerHelloDone message. Invalid length.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.record_overflow\n          }\n        })",
        ".error(c, error)": ".error(c, error)",
        ".error(c, {\n          message: \"Invalid ChangeCipherSpec message received.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.illegal_parameter\n          }\n        })": ".error(c, {\n          message: \"Invalid ChangeCipherSpec message received.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.illegal_parameter\n          }\n        })",
        ".error(c, {\n          message: \"Invalid verify_data in Finished message.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.decrypt_error\n          }\n        })": ".error(c, {\n          message: \"Invalid verify_data in Finished message.\",\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.decrypt_error\n          }\n        })",
        ".error(c, {\n        message: msg,\n        send: false,\n        origin: c.entity === tls.ConnectionEnd.client ? \"server\" : \"client\",\n        alert\n      })": ".error(c, {\n        message: msg,\n        send: false,\n        origin: c.entity === tls.ConnectionEnd.client ? \"server\" : \"client\",\n        alert\n      })",
        ".error(c2, {\n            message: \"Could not decrypt record or bad MAC.\",\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.bad_record_mac\n            }\n          })": ".error(c2, {\n            message: \"Could not decrypt record or bad MAC.\",\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.bad_record_mac\n            }\n          })",
        ".error(c2, {\n            message: \"Could not decompress record.\",\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.decompression_failure\n            }\n          })": ".error(c2, {\n            message: \"Could not decompress record.\",\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.decompression_failure\n            }\n          })",
        ".error(c2, {\n            message: \"Could not compress record.\",\n            send: false,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.internal_error\n            }\n          })": ".error(c2, {\n            message: \"Could not compress record.\",\n            send: false,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.internal_error\n            }\n          })",
        ".error(c2, {\n            message: \"Could not encrypt record.\",\n            send: false,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.internal_error\n            }\n          })": ".error(c2, {\n            message: \"Could not encrypt record.\",\n            send: false,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.internal_error\n            }\n          })",
        ".error(c, {\n            message: \"Could not send certificate list.\",\n            cause: ex,\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.bad_certificate\n            }\n          })": ".error(c, {\n            message: \"Could not send certificate list.\",\n            cause: ex,\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.bad_certificate\n            }\n          })",
        ".error(c2, {\n              message: \"Could not get private key.\",\n              cause: ex,\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description: tls.Alert.Description.internal_error\n              }\n            })": ".error(c2, {\n              message: \"Could not get private key.\",\n              cause: ex,\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description: tls.Alert.Description.internal_error\n              }\n            })",
        ".error(c2, {\n            message: \"No private key set.\",\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.internal_error\n            }\n          })": ".error(c2, {\n            message: \"No private key set.\",\n            send: true,\n            alert: {\n              level: tls.Alert.Level.fatal,\n              description: tls.Alert.Description.internal_error\n            }\n          })",
        ".error(c, err)": ".error(c, err)",
        ".error(c2, ex)": ".error(c2, ex)",
        ".error(c2, {\n              message: \"Incompatible TLS version.\",\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description: tls.Alert.Description.protocol_version\n              }\n            })": ".error(c2, {\n              message: \"Incompatible TLS version.\",\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description: tls.Alert.Description.protocol_version\n              }\n            })",
        ".error(c2, {\n                  message: \"Invalid fragmented record.\",\n                  send: true,\n                  alert: {\n                    level: tls.Alert.Level.fatal,\n                    description: tls.Alert.Description.unexpected_message\n                  }\n                })": ".error(c2, {\n                  message: \"Invalid fragmented record.\",\n                  send: true,\n                  alert: {\n                    level: tls.Alert.Level.fatal,\n                    description: tls.Alert.Description.unexpected_message\n                  }\n                })",
        ".error(c, {\n            message: \"Cannot initiate handshake as a server.\",\n            fatal: false\n          })": ".error(c, {\n            message: \"Cannot initiate handshake as a server.\",\n            fatal: false\n          })",
        ".error(c, {\n            message: \"Handshake already in progress.\",\n            fatal: false\n          })": ".error(c, {\n            message: \"Handshake already in progress.\",\n            fatal: false\n          })",
        ".error(`Failed to read the daily note template '${templatePath}'`, err)": ".error(`Failed to read the daily note template '${templatePath}'`, err)",
        ".error(`Failed to create file: '${normalizedPath}'`, err)": ".error(`Failed to create file: '${normalizedPath}'`, err)",
        ".error(\"ACTION NEEDED: require('iconv-lite')": ".error(\"ACTION NEEDED: require('iconv-lite')",
        ".error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\")": ".error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\")",
        ".error(\"Iconv-lite warning: decode()": ".error(\"Iconv-lite warning: decode()",
        ".error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\")": ".error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\")",
        "_error(error, req, res, next)": "_error(error, req, res, next)",
        "_error(err, req, res, next)": "_error(err, req, res, next)",
        "_error(layerError, req, res, next)": "_error(layerError, req, res, next)",
        " error(status, err)": " error(status, err)",
        ".error(500, err)": ".error(500, err)",
        ".error(404, error)": ".error(404, error)",
        ".error(500, error)": ".error(500, error)",
        ".error(403)": ".error(403)",
        ".error(400)": ".error(400)",
        ".error(404)": ".error(404)",
        ".error(412)": ".error(412)",
        ".error(416, {\n            headers: { \"Content-Range\": res.getHeader(\"Content-Range\")": ".error(416, {\n            headers: { \"Content-Range\": res.getHeader(\"Content-Range\")",
        "nerror(err)": "nerror(err)",
        "gerror(err)": "gerror(err)",
        ".error(err.stack || err.toString()": ".error(err.stack || err.toString()",
        " error(err)": " error(err)",
        ".error(errMsg)": ".error(errMsg)",
        ".error(err.stack)": ".error(err.stack)",
        ".error(\"No stack available!\")": ".error(\"No stack available!\")",
        "name: \"Proc-Type\"": "name: \"Proc-Type\"",
        "name: \"Content-Domain\"": "name: \"Content-Domain\"",
        "name: \"DEK-Info\"": "name: \"DEK-Info\"",
        "name: \"PrivateKeyInfo\"": "name: \"PrivateKeyInfo\"",
        "name: \"PrivateKeyInfo.version\"": "name: \"PrivateKeyInfo.version\"",
        "name: \"PrivateKeyInfo.privateKeyAlgorithm\"": "name: \"PrivateKeyInfo.privateKeyAlgorithm\"",
        "name: \"AlgorithmIdentifier.algorithm\"": "name: \"AlgorithmIdentifier.algorithm\"",
        "name: \"RSAPrivateKey\"": "name: \"RSAPrivateKey\"",
        "name: \"RSAPrivateKey.version\"": "name: \"RSAPrivateKey.version\"",
        "name: \"RSAPrivateKey.modulus\"": "name: \"RSAPrivateKey.modulus\"",
        "name: \"RSAPrivateKey.publicExponent\"": "name: \"RSAPrivateKey.publicExponent\"",
        "name: \"RSAPrivateKey.privateExponent\"": "name: \"RSAPrivateKey.privateExponent\"",
        "name: \"RSAPrivateKey.prime1\"": "name: \"RSAPrivateKey.prime1\"",
        "name: \"RSAPrivateKey.prime2\"": "name: \"RSAPrivateKey.prime2\"",
        "name: \"RSAPrivateKey.exponent1\"": "name: \"RSAPrivateKey.exponent1\"",
        "name: \"RSAPrivateKey.exponent2\"": "name: \"RSAPrivateKey.exponent2\"",
        "name: \"RSAPrivateKey.coefficient\"": "name: \"RSAPrivateKey.coefficient\"",
        "name: \"RSAPublicKey\"": "name: \"RSAPublicKey\"",
        "name: \"RSAPublicKey.modulus\"": "name: \"RSAPublicKey.modulus\"",
        "name: \"RSAPublicKey.exponent\"": "name: \"RSAPublicKey.exponent\"",
        "name: \"SubjectPublicKeyInfo\"": "name: \"SubjectPublicKeyInfo\"",
        "name: \"SubjectPublicKeyInfo.AlgorithmIdentifier\"": "name: \"SubjectPublicKeyInfo.AlgorithmIdentifier\"",
        "name: \"SubjectPublicKeyInfo.subjectPublicKey\"": "name: \"SubjectPublicKeyInfo.subjectPublicKey\"",
        "name: \"SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey\"": "name: \"SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey\"",
        "name: \"DigestInfo\"": "name: \"DigestInfo\"",
        "name: \"DigestInfo.DigestAlgorithm\"": "name: \"DigestInfo.DigestAlgorithm\"",
        "name: \"DigestInfo.DigestAlgorithm.algorithmIdentifier\"": "name: \"DigestInfo.DigestAlgorithm.algorithmIdentifier\"",
        "name: \"DigestInfo.DigestAlgorithm.parameters\"": "name: \"DigestInfo.DigestAlgorithm.parameters\"",
        "name: \"DigestInfo.digest\"": "name: \"DigestInfo.digest\"",
        "name: \"RSASSA-PKCS1-v1_5\"": "name: \"RSASSA-PKCS1-v1_5\"",
        "name: \"SHA-256\"": "name: \"SHA-256\"",
        "name: \"EncryptedPrivateKeyInfo\"": "name: \"EncryptedPrivateKeyInfo\"",
        "name: \"EncryptedPrivateKeyInfo.encryptionAlgorithm\"": "name: \"EncryptedPrivateKeyInfo.encryptionAlgorithm\"",
        "name: \"AlgorithmIdentifier.parameters\"": "name: \"AlgorithmIdentifier.parameters\"",
        "name: \"EncryptedPrivateKeyInfo.encryptedData\"": "name: \"EncryptedPrivateKeyInfo.encryptedData\"",
        "name: \"PBES2Algorithms\"": "name: \"PBES2Algorithms\"",
        "name: \"PBES2Algorithms.keyDerivationFunc\"": "name: \"PBES2Algorithms.keyDerivationFunc\"",
        "name: \"PBES2Algorithms.keyDerivationFunc.oid\"": "name: \"PBES2Algorithms.keyDerivationFunc.oid\"",
        "name: \"PBES2Algorithms.params\"": "name: \"PBES2Algorithms.params\"",
        "name: \"PBES2Algorithms.params.salt\"": "name: \"PBES2Algorithms.params.salt\"",
        "name: \"PBES2Algorithms.params.iterationCount\"": "name: \"PBES2Algorithms.params.iterationCount\"",
        "name: \"PBES2Algorithms.params.keyLength\"": "name: \"PBES2Algorithms.params.keyLength\"",
        "name: \"PBES2Algorithms.params.prf\"": "name: \"PBES2Algorithms.params.prf\"",
        "name: \"PBES2Algorithms.params.prf.algorithm\"": "name: \"PBES2Algorithms.params.prf.algorithm\"",
        "name: \"PBES2Algorithms.encryptionScheme\"": "name: \"PBES2Algorithms.encryptionScheme\"",
        "name: \"PBES2Algorithms.encryptionScheme.oid\"": "name: \"PBES2Algorithms.encryptionScheme.oid\"",
        "name: \"PBES2Algorithms.encryptionScheme.iv\"": "name: \"PBES2Algorithms.encryptionScheme.iv\"",
        "name: \"pkcs-12PbeParams\"": "name: \"pkcs-12PbeParams\"",
        "name: \"pkcs-12PbeParams.salt\"": "name: \"pkcs-12PbeParams.salt\"",
        "name: \"pkcs-12PbeParams.iterations\"": "name: \"pkcs-12PbeParams.iterations\"",
        "name: \"ContentInfo\"": "name: \"内容信息\"",
        "name: \"ContentInfo.ContentType\"": "name: \"ContentInfo.ContentType\"",
        "name: \"ContentInfo.content\"": "name: \"ContentInfo.content\"",
        "name: \"EncryptedContentInfo\"": "name: \"EncryptedContentInfo\"",
        "name: \"EncryptedContentInfo.contentType\"": "name: \"EncryptedContentInfo.contentType\"",
        "name: \"EncryptedContentInfo.contentEncryptionAlgorithm\"": "name: \"EncryptedContentInfo.contentEncryptionAlgorithm\"",
        "name: \"EncryptedContentInfo.contentEncryptionAlgorithm.algorithm\"": "name: \"EncryptedContentInfo.contentEncryptionAlgorithm.algorithm\"",
        "name: \"EncryptedContentInfo.contentEncryptionAlgorithm.parameter\"": "name: \"EncryptedContentInfo.contentEncryptionAlgorithm.parameter\"",
        "name: \"EncryptedContentInfo.encryptedContent\"": "name: \"EncryptedContentInfo.encryptedContent\"",
        "name: \"EnvelopedData\"": "name: \"EnvelopedData\"",
        "name: \"EnvelopedData.Version\"": "name: \"EnvelopedData.Version\"",
        "name: \"EnvelopedData.RecipientInfos\"": "name: \"EnvelopedData.RecipientInfos\"",
        "name: \"EncryptedData\"": "name: \"EncryptedData\"",
        "name: \"EncryptedData.Version\"": "name: \"EncryptedData.Version\"",
        "name: \"SignerInfo\"": "name: \"SignerInfo\"",
        "name: \"SignerInfo.version\"": "name: \"SignerInfo.version\"",
        "name: \"SignerInfo.issuerAndSerialNumber\"": "name: \"SignerInfo.issuerAndSerialNumber\"",
        "name: \"SignerInfo.issuerAndSerialNumber.issuer\"": "name: \"SignerInfo.issuerAndSerialNumber.issuer\"",
        "name: \"SignerInfo.issuerAndSerialNumber.serialNumber\"": "name: \"SignerInfo.issuerAndSerialNumber.serialNumber\"",
        "name: \"SignerInfo.digestAlgorithm\"": "name: \"SignerInfo.digestAlgorithm\"",
        "name: \"SignerInfo.digestAlgorithm.algorithm\"": "name: \"SignerInfo.digestAlgorithm.algorithm\"",
        "name: \"SignerInfo.digestAlgorithm.parameter\"": "name: \"SignerInfo.digestAlgorithm.parameter\"",
        "name: \"SignerInfo.authenticatedAttributes\"": "name: \"SignerInfo.authenticatedAttributes\"",
        "name: \"SignerInfo.digestEncryptionAlgorithm\"": "name: \"SignerInfo.digestEncryptionAlgorithm\"",
        "name: \"SignerInfo.encryptedDigest\"": "name: \"SignerInfo.encryptedDigest\"",
        "name: \"SignerInfo.unauthenticatedAttributes\"": "name: \"SignerInfo.unauthenticatedAttributes\"",
        "name: \"SignedData\"": "name: \"SignedData\"",
        "name: \"SignedData.Version\"": "name: \"SignedData.Version\"",
        "name: \"SignedData.DigestAlgorithms\"": "name: \"SignedData.DigestAlgorithms\"",
        "name: \"SignedData.Certificates\"": "name: \"SignedData.Certificates\"",
        "name: \"SignedData.CertificateRevocationLists\"": "name: \"SignedData.CertificateRevocationLists\"",
        "name: \"SignedData.SignerInfos\"": "name: \"SignedData.SignerInfos\"",
        "name: \"RecipientInfo\"": "name: \"RecipientInfo\"",
        "name: \"RecipientInfo.version\"": "name: \"RecipientInfo.version\"",
        "name: \"RecipientInfo.issuerAndSerial\"": "name: \"RecipientInfo.issuerAndSerial\"",
        "name: \"RecipientInfo.issuerAndSerial.issuer\"": "name: \"RecipientInfo.issuerAndSerial.issuer\"",
        "name: \"RecipientInfo.issuerAndSerial.serialNumber\"": "name: \"RecipientInfo.issuerAndSerial.serialNumber\"",
        "name: \"RecipientInfo.keyEncryptionAlgorithm\"": "name: \"RecipientInfo.keyEncryptionAlgorithm\"",
        "name: \"RecipientInfo.keyEncryptionAlgorithm.algorithm\"": "name: \"RecipientInfo.keyEncryptionAlgorithm.algorithm\"",
        "name: \"RecipientInfo.keyEncryptionAlgorithm.parameter\"": "name: \"RecipientInfo.keyEncryptionAlgorithm.parameter\"",
        "name: \"RecipientInfo.encryptedKey\"": "name: \"RecipientInfo.encryptedKey\"",
        "name: \"Certificate\"": "name: \"Certificate\"",
        "name: \"Certificate.TBSCertificate\"": "name: \"Certificate.TBSCertificate\"",
        "name: \"Certificate.TBSCertificate.version\"": "name: \"Certificate.TBSCertificate.version\"",
        "name: \"Certificate.TBSCertificate.version.integer\"": "name: \"Certificate.TBSCertificate.version.integer\"",
        "name: \"Certificate.TBSCertificate.serialNumber\"": "name: \"Certificate.TBSCertificate.serialNumber\"",
        "name: \"Certificate.TBSCertificate.signature\"": "name: \"Certificate.TBSCertificate.signature\"",
        "name: \"Certificate.TBSCertificate.signature.algorithm\"": "name: \"Certificate.TBSCertificate.signature.algorithm\"",
        "name: \"Certificate.TBSCertificate.signature.parameters\"": "name: \"Certificate.TBSCertificate.signature.parameters\"",
        "name: \"Certificate.TBSCertificate.issuer\"": "name: \"Certificate.TBSCertificate.issuer\"",
        "name: \"Certificate.TBSCertificate.validity\"": "name: \"Certificate.TBSCertificate.validity\"",
        "name: \"Certificate.TBSCertificate.validity.notBefore (utc)\"": "name: \"Certificate.TBSCertificate.validity.notBefore (utc)\"",
        "name: \"Certificate.TBSCertificate.validity.notBefore (generalized)\"": "name: \"Certificate.TBSCertificate.validity.notBefore (generalized)\"",
        "name: \"Certificate.TBSCertificate.validity.notAfter (utc)\"": "name: \"Certificate.TBSCertificate.validity.notAfter (utc)\"",
        "name: \"Certificate.TBSCertificate.validity.notAfter (generalized)\"": "name: \"Certificate.TBSCertificate.validity.notAfter (generalized)\"",
        "name: \"Certificate.TBSCertificate.subject\"": "name: \"Certificate.TBSCertificate.subject\"",
        "name: \"Certificate.TBSCertificate.issuerUniqueID\"": "name: \"Certificate.TBSCertificate.issuerUniqueID\"",
        "name: \"Certificate.TBSCertificate.issuerUniqueID.id\"": "name: \"Certificate.TBSCertificate.issuerUniqueID.id\"",
        "name: \"Certificate.TBSCertificate.subjectUniqueID\"": "name: \"Certificate.TBSCertificate.subjectUniqueID\"",
        "name: \"Certificate.TBSCertificate.subjectUniqueID.id\"": "name: \"Certificate.TBSCertificate.subjectUniqueID.id\"",
        "name: \"Certificate.TBSCertificate.extensions\"": "name: \"Certificate.TBSCertificate.extensions\"",
        "name: \"Certificate.signatureAlgorithm\"": "name: \"Certificate.signatureAlgorithm\"",
        "name: \"Certificate.signatureAlgorithm.algorithm\"": "name: \"Certificate.signatureAlgorithm.algorithm\"",
        "name: \"Certificate.signatureValue\"": "name: \"Certificate.signatureValue\"",
        "name: \"rsapss\"": "name: \"rsapss\"",
        "name: \"rsapss.hashAlgorithm\"": "name: \"rsapss.hashAlgorithm\"",
        "name: \"rsapss.hashAlgorithm.AlgorithmIdentifier\"": "name: \"rsapss.hashAlgorithm.AlgorithmIdentifier\"",
        "name: \"rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm\"": "name: \"rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm\"",
        "name: \"rsapss.maskGenAlgorithm\"": "name: \"rsapss.maskGenAlgorithm\"",
        "name: \"rsapss.maskGenAlgorithm.AlgorithmIdentifier\"": "name: \"rsapss.maskGenAlgorithm.AlgorithmIdentifier\"",
        "name: \"rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm\"": "name: \"rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm\"",
        "name: \"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params\"": "name: \"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params\"",
        "name: \"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm\"": "name: \"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm\"",
        "name: \"rsapss.saltLength\"": "name: \"rsapss.saltLength\"",
        "name: \"rsapss.saltLength.saltLength\"": "name: \"rsapss.saltLength.saltLength\"",
        "name: \"rsapss.trailerField\"": "name: \"rsapss.trailerField\"",
        "name: \"rsapss.trailer.trailer\"": "name: \"rsapss.trailer.trailer\"",
        "name: \"CertificationRequestInfo\"": "name: \"CertificationRequestInfo\"",
        "name: \"CertificationRequestInfo.integer\"": "name: \"CertificationRequestInfo.integer\"",
        "name: \"CertificationRequestInfo.subject\"": "name: \"CertificationRequestInfo.subject\"",
        "name: \"CertificationRequestInfo.attributes\"": "name: \"CertificationRequestInfo.attributes\"",
        "name: \"CertificationRequestInfo.attributes.type\"": "name: \"CertificationRequestInfo.attributes.type\"",
        "name: \"CertificationRequestInfo.attributes.value\"": "name: \"CertificationRequestInfo.attributes.value\"",
        "name: \"CertificationRequest\"": "name: \"CertificationRequest\"",
        "name: \"CertificationRequest.signatureAlgorithm\"": "name: \"CertificationRequest.signatureAlgorithm\"",
        "name: \"CertificationRequest.signatureAlgorithm.algorithm\"": "name: \"CertificationRequest.signatureAlgorithm.algorithm\"",
        "name: \"CertificationRequest.signatureAlgorithm.parameters\"": "name: \"CertificationRequest.signatureAlgorithm.parameters\"",
        "name: \"CertificationRequest.signature\"": "name: \"CertificationRequest.signature\"",
        "name: \"ContentInfo.contentType\"": "name: \"ContentInfo.contentType\"",
        "name: \"PFX\"": "name: \"PFX\"",
        "name: \"PFX.version\"": "name: \"PFX.version\"",
        "name: \"PFX.macData\"": "name: \"PFX.macData\"",
        "name: \"PFX.macData.mac\"": "name: \"PFX.macData.mac\"",
        "name: \"PFX.macData.mac.digestAlgorithm\"": "name: \"PFX.macData.mac.digestAlgorithm\"",
        "name: \"PFX.macData.mac.digestAlgorithm.algorithm\"": "name: \"PFX.macData.mac.digestAlgorithm.algorithm\"",
        "name: \"PFX.macData.mac.digestAlgorithm.parameters\"": "name: \"PFX.macData.mac.digestAlgorithm.parameters\"",
        "name: \"PFX.macData.mac.digest\"": "name: \"PFX.macData.mac.digest\"",
        "name: \"PFX.macData.macSalt\"": "name: \"PFX.macData.macSalt\"",
        "name: \"PFX.macData.iterations\"": "name: \"PFX.macData.iterations\"",
        "name: \"SafeBag\"": "name: \"SafeBag\"",
        "name: \"SafeBag.bagId\"": "name: \"SafeBag.bagId\"",
        "name: \"SafeBag.bagValue\"": "name: \"SafeBag.bagValue\"",
        "name: \"SafeBag.bagAttributes\"": "name: \"SafeBag.bagAttributes\"",
        "name: \"Attribute\"": "name: \"Attribute\"",
        "name: \"Attribute.attrId\"": "name: \"Attribute.attrId\"",
        "name: \"Attribute.attrValues\"": "name: \"Attribute.attrValues\"",
        "name: \"CertBag\"": "name: \"CertBag\"",
        "name: \"CertBag.certId\"": "name: \"CertBag.certId\"",
        "name: \"CertBag.certValue\"": "name: \"CertBag.certValue\"",
        "name: \"CertBag.certValue[0]\"": "name: \"CertBag.certValue[0]\"",
        "name: \"TLS_RSA_WITH_AES_128_CBC_SHA\"": "name: \"TLS_RSA_WITH_AES_128_CBC_SHA\"",
        "name: \"TLS_RSA_WITH_AES_256_CBC_SHA\"": "name: \"TLS_RSA_WITH_AES_256_CBC_SHA\"",
        "name : \" (anonymous)\"": "name : \" (anonymous)\"",
        "name: \"Operation\"": "name: \"Operation\"",
        "name: \"Target-Type\"": "name: \"Target-Type\"",
        "name: \"Target-Delimiter\"": "name: \"Target-Delimiter\"",
        "name: \"Target\"": "name: \"Target\"",
        "name: \"Trim-Target-Whitespace\"": "name: \"Trim-Target-Whitespace\"",
        "name: \"Search: Search in all files\"": "name: \"Search: Search in all files\"",
        "name: \"Graph view: Open graph view\"": "name: \"图形视图：打开图形视图\"",
        "name: \"commandId\"": "name: \"commandId\"",
        "name: \"filename\"": "name: \"filename\"",
        "name: \"newLeaf\"": "name: \"newLeaf\"",
        "name: \"period\"": "name: \"period\"",
        "name: \"year\"": "name: \"年\"",
        "name: \"month\"": "name: \"月\"",
        "name: \"day\"": "name: \"天\"",
        "name: \"query\"": "name: \"query\"",
        "name: \"contextLength\"": "name: \"contextLength\"",
        "name: \"pathToDirectory\"": "name: \"pathToDirectory\"",
        "name: \"commonName\"": "name: \"commonName\"",
        "name: \"basicConstraints\"": "name: \"basicConstraints\"",
        "name: \"keyUsage\"": "name: \"keyUsage\"",
        "name: \"extKeyUsage\"": "name: \"extKeyUsage\"",
        "name: \"nsCertType\"": "name: \"nsCertType\"",
        "name: \"subjectAltName\"": "name: \"subjectAltName\"",
        "description: \"Message describing the error.\"": "description: \"描述错误的消息。\"",
        "description: \"Is your current request authenticated?\"": "description: \"您当前的请求是否已通过身份验证？\"",
        "description: \"\\'OK\\'\"": "description: \"\\'OK\\'\"",
        "description: \"\\'Obsidian Local REST API\\'\"": "description: \"\\'Obsidian Local REST API\\'\"",
        "description: \"Obsidian plugin API version\"": "description: \"Obsidian plugin API version\"",
        "description: \"Plugin version.\"": "description: \"Plugin version.\"",
        "description: \"Success\"": "description: \"成功\"",
        "description: \"File does not exist.\"": "description: \"文件不存在。\"",
        "description: \"File does not exist\"": "description: \"文件不存在\"",
        "description: \"Patch operation to perform\"": "description: \"要执行的修补操作\"",
        "description: \"Type of target to patch\"": "description: \"修补目标的类型\"",
        "description: \"Delimiter to use for nested targets (i.e. Headings)\"": "description: \"用于嵌套目标的分隔符（即标题）\"",
        "description: \"Trim whitespace from Target before applying patch?\"": "description: \"在应用补丁之前从目标中修剪空格？\"",
        "description: \"Content you would like to insert.\"": "description: \"您想要插入的内容。\"",
        "description: \"Bad Request; see response message for details.\"": "description: \"错误请求；请参阅响应消息以了解详情。\"",
        "description: \"Does not exist\"": "description: \"不存在\"",
        "description: \"Content you would like to append.\"": "description: \"您想要附加的内容。\"",
        "description: \"Bad Request\"": "description: \"错误的请求\"",
        "description: \"Content of the file you would like to upload.\"": "description: \"您想要上传的文件的内容。\"",
        "description: \"A list of available commands.\"": "description: \"可用命令的列表。\"",
        "description: \"The id of the command to execute\"": "description: \"要执行的命令的 id\"",
        "description: \"The command you specified does not exist.\"": "description: \"您指定的命令不存在。\"",
        "description: \"Open this as a new leaf?\"": "description: \"以此作为新的一页？\"",
        "description: \"The name of the period for which you would like to grab a periodic note.\"": "description: \"您想要获取定期记录的期间的名称。\"",
        "description: \"The year of the date for which you would like to grab a periodic note.\"": "description: \"您想要获取定期记录的日期的年份。\"",
        "description: \"The month (1-12) of the date for which you would like to grab a periodic note.\"": "description: \"您想要获取定期记录的日期的月份 (1-12)。\"",
        "description: \"The day (1-31) of the date for which you would like to grab a periodic note.\"": "description: \"您想要获取定期记录的日期 (1-31)。\"",
        "description: \"Path to the matching file\"": "description: \"匹配文件的路径\"",
        "description: \"Your search query\"": "description: \"您的搜索查询\"",
        "description: \"How much context to return around the matching string\"": "description: \"返回匹配字符串周围的多少上下文\"",
        "description: \"Directory does not exist\"": "description: \"目录不存在\"",
        "description: \"HTTPS (Secure Mode)\"": "description: \"HTTPS (Secure Mode)\"",
        "description: \"Binding host\"": "description: \"Binding host\"",
        "description: \"HTTPS port\"": "description: \"HTTPS port\"",
        "description: \"HTTP (Insecure Mode)\"": "description: \"HTTP (Insecure Mode)\"",
        "description: \"HTTP port\"": "description: \"HTTP port\"",
        "text: `GET /vault/ HTTP/1.1\n${(_a = this.plugin.settings.authorizationHeaderName) != null ? _a : \"Authorization\"}: Bearer ${this.plugin.settings.apiKey}`": "text: `GET /vault/ HTTP/1.1\n${(_a = this.plugin.settings.authorizationHeaderName) != null ? _a : \"Authorization\"}: Bearer ${this.plugin.settings.apiKey}`",
        "text: `\n          Use of this software is licensed to you under the\n          MIT license, and it is important that you understand that \n          this license provides you with no warranty.\n          For the complete license text please see\n        `": "text: `\n          您根据 MIT 许可证使用本软件，请务必理解，\n本许可证不提供任何保证。\n完整的许可证文本请参阅\n        `",
        "text: \".\"": "text: \".\"",
        ".setButtonText(\"Restore Defaults\")": ".setButtonText(\"恢复默认值\")",
        ".setName(\"Enable Non-encrypted (HTTP) Server\")": ".setName(\"启用非加密（HTTP）服务器\")",
        ".setName(\"Restore Default Settings\")": ".setName(\"恢复默认设置\")",
        ".setName(\"Show advanced settings\")": ".setName(\"显示高级设置\")",
        ".setName(\"Encrypted (HTTPS) Server Port\")": ".setName(\"加密（HTTPS）服务器端口\")",
        ".setName(\"Non-encrypted (HTTP) Server Port\")": ".setName(\"非加密（HTTP）服务器端口\")",
        ".setName(\"API Key\")": ".setName(\"API Key\")",
        ".setName(\"Certificate Hostnames\")": ".setName(\"证书主机名\")",
        ".setName(\"Certificate\")": ".setName(\"证书\")",
        ".setName(\"Public Key\")": ".setName(\"公钥\")",
        ".setName(\"Private Key\")": ".setName(\"私钥\")",
        ".setName(\"Authorization Header\")": ".setName(\"授权标头\")",
        ".setName(\"Binding Host\")": ".setName(\"绑定主机\")",
        ".setDesc(`Pressing this button will cause your certificate,\n        private key, public key, and API key to be regenerated.\n        This settings panel will be closed when you press this.`)": ".setDesc(`按下此按钮将重新生成您的证书、\n私钥、公钥和 API 密钥。\n按下此按钮后，此设置面板将关闭。`)",
        ".setDesc(`Pressing this button will cause your certificate,\n        private key,  and public key to be re-generated, but your API key will remain unchanged. \n        This settings panel will be closed when you press this.`)": ".setDesc(`按下此按钮将重新生成您的证书、\n私钥和公钥，但您的 API 密钥将保持不变。\n按下此按钮后，此设置面板将关闭。`)",
        ".setDesc(`Pressing this button will reset this plugin's\n        settings to defaults.\n        This settings panel will be closed when you press this.`)": ".setDesc(`按下此按钮将重置此插件的设置至默认设置。\n按下此按钮后，此设置面板将关闭。`)",
        ".setDesc(`Advanced settings are dangerous and may make your environment less secure.`)": ".setDesc(`高级设置很危险，可能会降低您的环境的安全性。`)",
        ".setDesc(`\n          This controls whether the HTTPs server is enabled.  You almost certainly want to leave this switch in its default state ('on'),\n          but may find it useful to turn this switch off for\n          troubleshooting.\n        `)": ".setDesc(`\n          这控制是否启用 HTTPS 服务器。您几乎肯定希望将此开关保留为默认状态（“开启”），\n但关闭此开关可能会对故障排除有所帮助。\n        `)"
    }
}