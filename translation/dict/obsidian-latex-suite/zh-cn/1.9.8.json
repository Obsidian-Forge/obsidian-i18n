{
    "manifest": {
        "translationVersion": 1758803283019,
        "pluginVersion": "1.9.8"
    },
    "description": {
        "original": "Make typesetting LaTeX math as fast as handwriting through snippets, text expansion, and editor enhancements",
        "translation": "通过代码片段、文本扩展和编辑器增强功能，让LaTeX数学公式排版速度堪比手写"
    },
    "dict": {
        "name: \"Enable all features\"": "name: \"启用所有功能\"",
        "name: \"Disable all features\"": "name: \"禁用所有功能\"",
        "description: \"Add space after hyperbolic trig funcs\"": "description: \"双曲三角函数后加空格\"",
        "description: \"Taylor expansion\"": "description: \"泰勒展开\"",
        ".setButtonText(\"Cancel\")": ".setButtonText(\"取消\")",
        ".setName(\"Snippets\")": ".setName(\"代码片段\")",
        ".setName(\"Snippets file or folder location\")": ".setName(\"代码片段文件或文件夹位置\")",
        ".setName(\"Reveal delay (ms)\")": ".setName(\"显示延迟（毫秒）\")",
        ".setName(\"Excluded environments\")": ".setName(\"排除的环境\")",
        ".setName(\"Environments\")": ".setName(\"环境\")",
        ".setName(\"Snippet variables\")": ".setName(\"代码片段变量\")",
        ".setName(\"Word delimiters\")": ".setName(\"单词分隔符\")",
        "Notice(`Failed to parse variable file ${file.name}: ${e}`)": "Notice(`解析变量文件${file.name}失败：${e}`)",
        "Notice(`Failed to parse snippet file ${file.name}: ${e}`)": "Notice(`解析代码片段文件${file.name}失败：${e}`)",
        "Notice(`Failed to load snippet variables from settings: ${e}`)": "Notice(`从设置中加载代码片段变量失败：${e}`)",
        "Notice(`Failed to load snippets from settings: ${e}`)": "Notice(`从设置中加载代码片段失败：${e}`)",
        ".log(`Failed to parse variable file ${file.name}: ${e}`)": ".log(`解析变量文件${file.name}失败：${e}`)",
        ".log(`Failed to parse snippet file ${file.name}: ${e}`)": ".log(`解析代码片段文件${file.name}失败：${e}`)",
        ".log(\"Stuck with token \" + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value)": ".log(\"卡在令牌处 \" + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value)",
        ".log(`Failed to load snippet variables from settings: ${e}`)": ".log(`从设置中加载代码片段变量失败：${e}`)",
        ".log(`Failed to load snippets from settings: ${e}`)": ".log(`从设置中加载代码片段失败：${e}`)",
        "name : \" (anonymous)\"": "name : \"（匿名）\"",
        "name: \"applyStyles\"": "name: \"应用样式\"",
        "name: \"arrow\"": "name: \"箭头\"",
        "name: \"computeStyles\"": "name: \"计算样式\"",
        "name: \"eventListeners\"": "name: \"事件监听器\"",
        "name: \"flip\"": "name: \"翻转\"",
        "name: \"hide\"": "name: \"隐藏\"",
        "name: \"offset\"": "name: \"偏移\"",
        "name: \"popperOffsets\"": "name: \"浮层偏移\"",
        "name: \"preventOverflow\"": "name: \"防止溢出\"",
        "name: \"sameWidth\"": "name: \"同宽\"",
        "name: \"Box current equation\"": "name: \"框选当前公式\"",
        "name: \"Select current equation\"": "name: \"选中当前公式\"",
        "description: \"Auto letter subscript\"": "description: \"字母自动下标\"",
        "description: \"Add backslash before Greek letters\"": "description: \"希腊字母前加反斜杠\"",
        "description: \"Add backslash before symbols\"": "description: \"符号前加反斜杠\"",
        "description: \"Add backslash before trig funcs\"": "description: \"三角函数前加反斜杠\"",
        "description: \"Add space after trig funcs. Skips letter h to allow sinh, cosh, etc.\"": "description: \"三角函数后加空格。跳过字母h以支持sinh、cosh等双曲函数。\"",
        "description: \"N x N identity matrix\"": "description: \"N×N单位矩阵\"",
        "text: \"reference\"": "text: \"参考\"",
        ".setText(\"Make equations more readable by hiding LaTeX syntax and instead displaying it in a pretty format.\")": ".setText(\"隐藏LaTeX语法，以美观格式显示公式，提升可读性。\")",
        ".setText(\"LaTeX beneath the cursor will be revealed.\")": ".setText(\"光标下方的LaTeX代码将显示出来。\")",
        ".setText(\"Disabled by default to not confuse new users. However, I recommend turning this on once you are comfortable with the plugin!\")": ".setText(\"默认禁用以防新用户混淆。但熟悉插件后，建议开启此功能！\")",
        ".setText(\"How long to delay the reveal of LaTeX for, in milliseconds, when the cursor moves over LaTeX. Defaults to 0 (LaTeX under the cursor is revealed immediately).\")": ".setText(\"光标移过LaTeX时，延迟多久显示代码（毫秒）。默认0毫秒（光标下的LaTeX立即显示）。\")",
        ".setText(\"Can be set to a positive number, e.g. 300, to delay the reveal of LaTeX, making it much easier to navigate equations using arrow keys.\")": ".setText(\"可设为正数（如300）延迟显示LaTeX，使用方向键导航公式时更顺畅。\")",
        ".setText(\"Must be an integer \\u2265 0.\")": ".setText(\"必须是≥0的整数。\")",
        ".setText(\"When inside an equation, show a popup preview window of the rendered math.\")": ".setText(\"在公式内时，显示渲染后数学公式的弹窗预览。\")",
        ".setText(\"The popup preview will be shown for all inline math equations, as well as for block math equations in Source mode.\")": ".setText(\"弹窗预览将显示所有行内公式，以及源代码模式下的块级公式。\")",
        ".setButtonText(\"Reset to default snippets\")": ".setButtonText(\"重置为默认代码片段\")",
        ".setButtonText(\"Remove all snippets\")": ".setButtonText(\"删除所有代码片段\")",
        ".setName(\"Enabled\")": ".setName(\"已启用\")",
        ".setName(\"Load snippets from file or folder\")": ".setName(\"从文件或文件夹加载代码片段\")",
        ".setName(\"Key trigger for non-auto snippets\")": ".setName(\"非自动代码片段的触发键\")",
        ".setName(\"Color paired brackets\")": ".setName(\"配对括号着色\")",
        ".setName(\"Highlight matching bracket beneath cursor\")": ".setName(\"高亮光标旁的配对括号\")",
        ".setName(\"Position\")": ".setName(\"位置\")",
        ".setName(\"Fraction symbol\")": ".setName(\"分式符号\")",
        ".setName(\"Breaking characters\")": ".setName(\"分隔字符\")",
        ".setName(\"Triggers\")": ".setName(\"触发器\")",
        ".setName(\"Load snippet variables from file or folder\")": ".setName(\"从文件或文件夹加载代码片段变量\")",
        ".setName(\"Snippet variables file or folder location\")": ".setName(\"代码片段变量文件或文件夹位置\")",
        ".setName(\"Remove trailing whitespaces in snippets in inline math\")": ".setName(\"移除行内公式中代码片段的尾随空格\")",
        ".setName(\"Remove closing $ when backspacing inside blank inline math\")": ".setName(\"在空白行内公式中回退时移除闭合$\")",
        ".setName(\"Don't trigger snippets when IME is active\")": ".setName(\"IME激活时不触发代码片段\")",
        ".setName(\"Code languages to interpret as math mode\")": ".setName(\"视为数学模式的代码语言\")",
        ".setDesc(\"Whether snippets are enabled.\")": ".setDesc(\"是否启用代码片段。\")",
        ".setDesc('Enter snippets here.  Remember to add a comma after each snippet, and escape all backslashes with an extra \\\\. Lines starting with \"//\" will be treated as comments and ignored.')": ".setDesc('在此输入代码片段。每个片段后需加逗号，反斜杠需用额外反斜杠转义（\\\\）。以\"//\"开头的行视为注释，将被忽略。')",
        ".setDesc(\"Whether to load snippets from a specified file, or from all files within a folder (instead of from the plugin settings).\")": ".setDesc('是否从指定文件或文件夹内所有文件加载代码片段（而非从插件设置中加载）。')",
        ".setDesc(\"What key to press to expand non-auto snippets.\")": ".setDesc(\"按下哪个键来展开非自动代码片段。\")",
        ".setDesc(\"Whether to colorize matching brackets.\")": ".setDesc(\"是否为配对括号着色。\")",
        ".setDesc(\"When the cursor is adjacent to a bracket, highlight the matching bracket.\")": ".setDesc(\"当光标邻近括号时，高亮显示配对的括号。\")",
        ".setDesc(\"Where to display the popup preview relative to the equation source.\")": ".setDesc(\"弹窗预览相对于公式源代码的显示位置。\")",
        ".setDesc(\"Whether auto-fraction is enabled.\")": ".setDesc(\"是否启用自动分式功能。\")",
        ".setDesc(\"The fraction symbol to use in the replacement. e.g. \\\\frac, \\\\dfrac, \\\\tfrac\")": ".setDesc(\"替换时使用的分式符号。例如：\\\\frac、\\\\dfrac、\\\\tfrac\")",
        ".setDesc('A list of environments to exclude auto-fraction from running in. For example, to exclude auto-fraction from running while inside an exponent, such as e^{...}, use  [\"^{\", \"}\"]')": ".setDesc('排除自动分式功能的环境列表。例如，要在指数（如e^{...}）内禁用自动分式，可填写 [\"^{\", \"}\"]')",
        ".setDesc('A list of characters that denote the start/end of a fraction. e.g. if + is included in the list, \"a+b/c\" will expand to \"a+\\\\frac{b}{c}\". If + is not in the list, it will expand to \"\\\\frac{a+b}{c}\".')": ".setDesc('表示分式起止的字符列表。例如，若列表包含+，则\"a+b/c\"会扩展为\"a+\\\\frac{b}{c}\"；若不包含+，则扩展为\"\\\\frac{a+b}{c}\"。')",
        ".setDesc(\"Whether matrix shortcuts are enabled.\")": ".setDesc(\"是否启用矩阵快捷键。\")",
        ".setDesc(\"A list of environment names to run the matrix shortcuts in, separated by commas.\")": ".setDesc(\"启用矩阵快捷键的环境名称列表，用逗号分隔。\")",
        ".setDesc(\"Whether tabout is enabled.\")": ".setDesc(\"是否启用Tab跳出功能。\")",
        ".setDesc(\"Whether to automatically enlarge brackets containing e.g. sum, int, frac.\")": ".setDesc(\"是否自动放大包含sum、int、frac等的括号。\")",
        ".setDesc(\"A list of symbols that should trigger auto-enlarge brackets, separated by commas.\")": ".setDesc(\"触发括号自动放大的符号列表，用逗号分隔。\")",
        ".setDesc(\"Assign snippet variables that can be used as shortcuts when writing snippets.\")": ".setDesc(\"定义代码片段变量，可作为编写代码片段时的快捷方式。\")",
        ".setDesc(\"Whether to load snippet variables from a specified file, or from all files within a folder (instead of from the plugin settings).\")": ".setDesc('是否从指定文件或文件夹内所有文件加载代码片段变量（而非从插件设置中加载）。')",
        ".setDesc('Symbols that will be treated as word delimiters, for use with the \"w\" snippet option.')": ".setDesc('视为单词分隔符的符号，用于代码片段的\"w\"选项。')",
        ".setDesc(\"Whether to remove trailing whitespaces when expanding snippets at the end of inline math blocks.\")": ".setDesc(\"在行内公式末尾扩展代码片段时，是否移除尾随空格。\")",
        ".setDesc(\"Whether to also remove the closing $ when you delete the opening $ symbol inside blank inline math.\")": ".setDesc(\"在空白行内公式中删除起始$时，是否同时移除闭合$。\")",
        ".setDesc(\"Whether to suppress snippets triggering when an IME is active.\")": ".setDesc(\"IME（输入法）激活时，是否禁止代码片段触发。\")",
        ".setDesc(\"Codeblock languages where the whole code block should be treated like a math block, separated by commas.\")": ".setDesc(\"需视为数学模式的代码块语言，用逗号分隔。\")",
        ".setTooltip(\"Reset to default snippets\")": ".setTooltip(\"重置为默认代码片段\")",
        ".setTooltip(\"Remove all snippets\")": ".setTooltip(\"删除所有代码片段\")",
        "Notice(message, 1e5)": "Notice(message, 1e5)",
        "Notice(snippets2.length, Object.keys(snippetVariables)": "Notice(snippets2.length, Object.keys(snippetVariables)",
        "Notice(nSnippets, nSnippetVariables, becauseFileLocationUpdated, becauseFileUpdated)": "Notice(nSnippets, nSnippetVariables, becauseFileLocationUpdated, becauseFileUpdated)",
        "Notice(prefix + body.join(\" and \")": "Notice(prefix + body.join(\" 和 \")",
        ".log(e)": ".log(e)",
        ".log(base + this.stackID(stack)": ".log(base + this.stackID(stack)",
        ".log(base + this.stackID(localStack)": ".log(base + this.stackID(localStack)",
        ".log(forceBase + this.stackID(force)": ".log(forceBase + this.stackID(force)",
        ".log(base + this.stackID(insert)": ".log(base + this.stackID(insert)",
        ".log(message)": ".log(message)",
        ".error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement)": ".error(['Popper：\"arrow\"元素必须是HTMLElement（不能是SVGElement）",
        ".error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', \"element.\"].join(\" \")": ".error(['Popper：\"arrow\"修饰符的`element`必须是popper的子元素', \"element.\"].join(\" \")",
        ".error([\"Popper: The `allowedAutoPlacements` option did not allow any\", \"placements. Ensure the `placement` option matches the variation\", \"of the allowed placements.\", 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(\" \")": ".error([\"Popper：`allowedAutoPlacements`选项未允许任何位置。确保`placement`选项与允许位置的变体匹配。\", '例如，\"auto\"不能用于允许\"bottom-start\"，请改用\"auto-start\"。'].join(\" \")",
        ".error(format(INVALID_MODIFIER_ERROR, String(modifier.name)": ".error(format(INVALID_MODIFIER_ERROR, String(modifier.name)",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', '\"' + String(modifier.enabled)": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"enabled\"', '\"boolean\"', '\"' + String(modifier.enabled)",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"either \" + modifierPhases.join(\", \")": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"phase\"', \"应为 \" + modifierPhases.join(\", \")",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', '\"' + String(modifier.fn)": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"fn\"', '\"function\"', '\"' + String(modifier.fn)",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', '\"' + String(modifier.fn)": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"effect\"', '\"function\"', '\"' + String(modifier.fn)",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', '\"' + String(modifier.requires)": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requires\"', '\"array\"', '\"' + String(modifier.requires)",
        ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', '\"' + String(modifier.requiresIfExists)": ".error(format(INVALID_MODIFIER_ERROR, modifier.name, '\"requiresIfExists\"', '\"array\"', '\"' + String(modifier.requiresIfExists)",
        ".error('PopperJS: an invalid property has been provided to the \"' + modifier.name + '\" modifier, valid properties are ' + VALID_PROPERTIES.map(function(s)": ".error('PopperJS：向\"' + modifier.name + '\"修饰符提供了无效属性，有效属性为 ' + VALID_PROPERTIES.map(function(s)",
        ".error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name)": ".error(format(MISSING_DEPENDENCY_ERROR, String(modifier.name)",
        ".error(['Popper: \"auto\" placements require the \"flip\" modifier be', \"present and enabled to work.\"].join(\" \")": ".error(['Popper：\"auto\"位置需要\"flip\"修饰符存在且启用才能生效。'].join(\" \")",
        ".error(INVALID_ELEMENT_ERROR)": ".error(INVALID_ELEMENT_ERROR)",
        ".error(INFINITE_LOOP_ERROR)": ".error(INFINITE_LOOP_ERROR)",
        ".error(e)": ".error(e)",
        "name: \"obsidian\"": "name: \"Obsidian\"",
        "selection: \"var(--text-selection)\"": "selection: \"var(--text-selection)\"",
        "text: \"\" },\n      // Replace the \"": "text: \"\" },\n      // 替换\"",
        "text: \"{\"": "text: \"{\"",
        "text: \"}\"": "text: \"}\"",
        "text: \"\" },\n      // Replace brackets of the numerator\n      { start: numeratorStart, end: numeratorStart + 1, text: \"": "text: \"\" },\n      // 替换分子的括号\n      { start: numeratorStart, end: numeratorStart + 1, text: \"",
        "text: \")\"": "text: \")\"",
        "text: \"/\"": "text: \"/\"",
        "text: \"(\"": "text: \"(\"",
        ".setPlaceholder('[ [\"^{\", \"}] ]')": ".setPlaceholder('[ [\"^{\", \"}] ]')"
    }
}